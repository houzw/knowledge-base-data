[
  {
    "title": "convert nodata to zero",
    "category": "Data Tools",
    "description": "Converts nodata values in a raster to zero..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ConvertNodataToZero -v ^\n--wd=\"/path/to/data/\" --input=in.tif -o=NewRaster.tif \n\n"
    ]
  },
  {
    "title": "convert raster format",
    "category": "Data Tools",
    "description": "Converts raster data from one format to another..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ConvertRasterFormat -v ^\n--wd=\"/path/to/data/\" --input=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "export table to csv",
    "category": "Data Tools",
    "description": "Exports an attribute table to a CSV text file..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--headers",
        "description": "Export field names as file header?"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ExportTableToCsv -v ^\n--wd=\"/path/to/data/\" -i=lines.shp -o=output.csv --headers \n\n"
    ]
  },
  {
    "title": "idw interpolation",
    "category": "Data Tools",
    "description": "Interpolates vector points into a raster surface using an inverse-distance weighted scheme..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector Points file"
      },
      {
        "flag": "--field",
        "description": "Input field name in attribute table"
      },
      {
        "flag": "--use_z",
        "description": "Use z-coordinate instead of field?"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--weight",
        "description": "IDW weight value"
      },
      {
        "flag": "--radius",
        "description": "Search Radius"
      },
      {
        "flag": "--min_points",
        "description": "Minimum number of points"
      },
      {
        "flag": "--cell_size",
        "description": "Optionally specified cell size of output raster. Not used when base raster is"
      },
      {
        "flag": "--base",
        "description": "Optionally specified input base raster file. Not used when a cell size is"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=IdwInterpolation -v ^\n--wd=\"/path/to/data/\" -i=points.shp --field=ELEV -o=output.tif ^\n--assign=min --nodata ^\n--cell_size=10.0\n        >>./whitebox_tools -r=IdwInterpolation ^\n-v --wd=\"/path/to/data/\" -i=points.shp --field=FID ^\n-o=output.tif --assign=last --base=existing_raster.tif \n\n"
    ]
  },
  {
    "title": "new raster from base",
    "category": "Data Tools",
    "description": "Creates a new raster using a base image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--base",
        "description": "Input base raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--value",
        "description": "Constant value to fill raster with; either \u2018nodata\u2019 or numeric value"
      },
      {
        "flag": "--data_type",
        "description": "Output raster data type; options include \u2018double\u2019 (64-bit), \u2018float\u2019 (32-bit),"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=NewRasterFromBase -v ^\n--wd=\"/path/to/data/\" --base=base.tif -o=NewRaster.tif ^\n--value=0.0 --data_type=integer\n>>./whitebox_tools ^\n-r=NewRasterFromBase -v --wd=\"/path/to/data/\" --base=base.tif ^\n-o=NewRaster.tif --value=nodata \n\n"
    ]
  },
  {
    "title": "polygons to lines",
    "category": "Data Tools",
    "description": "Converts vector polygons to polylines..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector polygon file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector lines file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PolygonsToLines -v ^\n--wd=\"/path/to/data/\" -i=input.shp -o=output.shp \n\n"
    ]
  },
  {
    "title": "print geo tiff tags",
    "category": "Data Tools",
    "description": "Prints the tags within a GeoTIFF..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input GeoTIFF file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PrintGeoTiffTags -v ^\n--wd=\"/path/to/data/\" --input=DEM.tiff \n\n"
    ]
  },
  {
    "title": "reinitialize attribute table",
    "category": "Data Tools",
    "description": "Reinitializes a vector\u2019s attribute table deleting all fields but the feature ID (FID)..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ReinitializeAttributeTable -v ^\n--wd=\"/path/to/data/\" -i=input.shp \n\n"
    ]
  },
  {
    "title": "set nodata value",
    "category": "Data Tools",
    "description": "Assign a specified value in an input image to the NoData value..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--back_value",
        "description": "Background value to set to nodata"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=SetNodataValue -v --wd=\"/path/to/data/\" ^\n-i=in.tif -o=newRaster.tif --back_value=1.0 \n\n"
    ]
  },
  {
    "title": "vector lines to raster",
    "category": "Data Tools",
    "description": "Converts a vector containing polylines into a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector lines file"
      },
      {
        "flag": "--field",
        "description": "Input field name in attribute table"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--nodata",
        "description": "Background value to set to NoData. Without this flag, it will be set to 0.0"
      },
      {
        "flag": "--cell_size",
        "description": "Optionally specified cell size of output raster. Not used when base raster is"
      },
      {
        "flag": "--base",
        "description": "Optionally specified input base raster file. Not used when a cell size is"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=VectorLinesToRaster -v ^\n--wd=\"/path/to/data/\" -i=lines.shp --field=ELEV -o=output.tif ^\n--nodata --cell_size=10.0\n        >>./whitebox_tools ^\n-r=VectorLinesToRaster -v --wd=\"/path/to/data/\" -i=lines.shp ^\n--field=FID -o=output.tif --base=existing_raster.tif \n\n"
    ]
  },
  {
    "title": "vector points to raster",
    "category": "Data Tools",
    "description": "Converts a vector containing points into a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector Points file"
      },
      {
        "flag": "--field",
        "description": "Input field name in attribute table"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--assign",
        "description": "Assignment operation, where multiple points are in the same grid cell; options"
      },
      {
        "flag": "--nodata",
        "description": "Background value to set to NoData. Without this flag, it will be set to 0.0"
      },
      {
        "flag": "--cell_size",
        "description": "Optionally specified cell size of output raster. Not used when base raster is"
      },
      {
        "flag": "--base",
        "description": "Optionally specified input base raster file. Not used when a cell size is"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=VectorPointsToRaster -v ^\n--wd=\"/path/to/data/\" -i=points.shp --field=ELEV -o=output.tif ^\n--assign=min --nodata ^\n--cell_size=10.0\n        >>./whitebox_tools ^\n-r=VectorPointsToRaster -v --wd=\"/path/to/data/\" -i=points.shp ^\n--field=FID -o=output.tif --assign=last ^\n--base=existing_raster.tif \n\n"
    ]
  },
  {
    "title": "vector polygons to raster",
    "category": "Data Tools",
    "description": "Converts a vector containing polygons into a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector polygons file"
      },
      {
        "flag": "--field",
        "description": "Input field name in attribute table"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--nodata",
        "description": "Background value to set to NoData. Without this flag, it will be set to 0.0"
      },
      {
        "flag": "--cell_size",
        "description": "Optionally specified cell size of output raster. Not used when base raster is"
      },
      {
        "flag": "--base",
        "description": "Optionally specified input base raster file. Not used when a cell size is"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=VectorPolygonsToRaster -v ^\n--wd=\"/path/to/data/\" -i=lakes.shp --field=ELEV -o=output.tif ^\n--nodata --cell_size=10.0\n        >>./whitebox_tools ^\n-r=VectorPolygonsToRaster -v --wd=\"/path/to/data/\" ^\n-i=lakes.shp --field=ELEV -o=output.tif ^\n--base=existing_raster.tif \n\n"
    ]
  },
  {
    "title": "aggregate raster",
    "category": "GIS Analysis",
    "description": "Aggregates a raster to a lower resolution..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--agg_factor",
        "description": "Aggregation factor, in pixels"
      },
      {
        "flag": "--type",
        "description": "Statistic used to fill output pixels"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=AggregateRaster -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif ^\n--output_text \n\n"
    ]
  },
  {
    "title": "centroid",
    "category": "GIS Analysis",
    "description": "Calculates the centroid, or average location, of raster polygon objects..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--text_output",
        "description": "Optional text output"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Centroid -v --wd=\"/path/to/data/\" ^\n-i=polygons.tif -o=output.tif\n>>./whitebox_tools -r=Centroid ^\n-v --wd=\"/path/to/data/\" -i=polygons.tif -o=output.tif ^\n--text_output \n\n"
    ]
  },
  {
    "title": "clump",
    "category": "GIS Analysis",
    "description": "Groups cells that form physically discrete areas, assigning them unique identifiers..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--diag",
        "description": "Flag indicating whether diagonal connections should be considered"
      },
      {
        "flag": "--zero_back",
        "description": "Flag indicating whether zero values should be treated as a background"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Clump -v --wd=\"/path/to/data/\" ^\n-i=input.tif -o=output.tif --diag \n\n"
    ]
  },
  {
    "title": "create plane",
    "category": "GIS Analysis",
    "description": "Creates a raster image based on the equation for a simple plane..",
    "parameter": [
      {
        "flag": "--base",
        "description": "Input base raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--gradient",
        "description": "Slope gradient in degrees (-85.0 to 85.0)"
      },
      {
        "flag": "--aspect",
        "description": "Aspect (direction) in degrees clockwise from north (0.0-360.0)"
      },
      {
        "flag": "--constant",
        "description": "Constant value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CreatePlane -v --wd=\"/path/to/data/\" ^\n--base=base.tif -o=NewRaster.tif --gradient=15.0 ^\n--aspect=315.0 \n\n"
    ]
  },
  {
    "title": "extract raster values at points",
    "category": "GIS Analysis",
    "description": "Extracts the values of raster(s) at vector point locations..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "--points",
        "description": "Input vector points file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ExtractRasterValuesAtPoints -v ^\n--wd=\"/path/to/data/\" -i='image1.tif;image2.tif;image3.tif' ^\n-points=points.shp \n\n"
    ]
  },
  {
    "title": "find lowest or highest points",
    "category": "GIS Analysis",
    "description": "Locates the lowest and/or highest valued cells in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector points file"
      },
      {
        "flag": "--out_type",
        "description": "Output type; one of \u2018area\u2019 (default) and \u2018volume\u2019"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FindLowestOrHighestPoints -v ^\n--wd=\"/path/to/data/\" --input=DEM.tif -o=out.shp ^\n--out_type=highest \n\n"
    ]
  },
  {
    "title": "raster cell assignment",
    "category": "GIS Analysis",
    "description": "Assign row or column number to cells..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "-a",
        "flag_long": "--assign",
        "description": "Which variable would you like to assign to grid cells? Options include"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RasterCellAssignment -v ^\n--wd=\"/path/to/data/\" -i='input.tif' -o=output.tif ^\n--assign='column' \n\n"
    ]
  },
  {
    "title": "reclass",
    "category": "GIS Analysis",
    "description": "Reclassifies the values in a raster image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--reclass_vals",
        "description": "Reclassification triplet values (new value; from value; to less than), e.g."
      },
      {
        "flag": "--assign_mode",
        "description": "Optional Boolean flag indicating whether to operate in assign mode,"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Reclass -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif ^\n--reclass_vals='0.0;0.0;1.0;1.0;1.0;2.0'\n>>./whitebox_tools ^\n-r=Reclass -v --wd=\"/path/to/data/\" -i='input.tif' ^\n-o=output.tif --reclass_vals='10;1;20;2;30;3;40;4' ^\n--assign_mode \n\n"
    ]
  },
  {
    "title": "reclass equal interval",
    "category": "GIS Analysis",
    "description": "Reclassifies the values in a raster image based on equal-ranges..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--interval",
        "description": "Class interval size"
      },
      {
        "flag": "--start_val",
        "description": "Optional starting value (default is input minimum value)"
      },
      {
        "flag": "--end_val",
        "description": "Optional ending value (default is input maximum value)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ReclassEqualInterval -v ^\n--wd=\"/path/to/data/\" -i='input.tif' -o=output.tif ^\n--interval=10.0 --start_val=0.0 \n\n"
    ]
  },
  {
    "title": "reclass from file",
    "category": "GIS Analysis",
    "description": "Reclassifies the values in a raster image using reclass ranges in a text file..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "--reclass_file",
        "description": "Input text file containing reclass ranges"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ReclassFromFile -v ^\n--wd=\"/path/to/data/\" -i='input.tif' ^\n--reclass_file='reclass.txt' -o=output.tif \n\n"
    ]
  },
  {
    "title": "buffer raster",
    "category": "GIS Analysis Distance Tools",
    "description": "Maps a distance-based buffer around each non-background (non-zero/non-nodata) grid cell in an input image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--size",
        "description": "Buffer size"
      },
      {
        "flag": "--gridcells",
        "description": "Optional flag to indicate that the \u2018size\u2019 threshold should be measured in grid"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=BufferRaster -v --wd=\"/path/to/data/\" ^\n-i=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "cost allocation",
    "category": "GIS Analysis Distance Tools",
    "description": "Identifies the source cell to which each grid cell is connected by a least-cost pathway in a cost-distance analysis..",
    "parameter": [
      {
        "flag": "--source",
        "description": "Input source raster file"
      },
      {
        "flag": "--backlink",
        "description": "Input backlink raster file generated by the cost-distance tool"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CostAllocation -v --wd=\"/path/to/data/\" ^\n--source='source.tif' --backlink='backlink.tif' ^\n-o='output.tif' \n\n"
    ]
  },
  {
    "title": "cost distance",
    "category": "GIS Analysis Distance Tools",
    "description": "Performs cost-distance accumulation on a cost surface and a group of source cells..",
    "parameter": [
      {
        "flag": "--source",
        "description": "Input source raster file"
      },
      {
        "flag": "--cost",
        "description": "Input cost (friction) raster file"
      },
      {
        "flag": "--out_accum",
        "description": "Output cost accumulation raster file"
      },
      {
        "flag": "--out_backlink",
        "description": "Output backlink raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CostDistance -v --wd=\"/path/to/data/\" ^\n--source=src.tif --cost=cost.tif --out_accum=accum.tif ^\n--out_backlink=backlink.tif \n\n"
    ]
  },
  {
    "title": "cost pathway",
    "category": "GIS Analysis Distance Tools",
    "description": "Performs cost-distance pathway analysis using a series of destination grid cells..",
    "parameter": [
      {
        "flag": "--destination",
        "description": "Input destination raster file"
      },
      {
        "flag": "--backlink",
        "description": "Input backlink raster file generated by the cost-distance tool"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output cost pathway raster file"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether zero values should be treated as a background"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CostPathway -v --wd=\"/path/to/data/\" ^\n--destination=dst.tif --backlink=backlink.tif ^\n--output=cost_path.tif \n\n"
    ]
  },
  {
    "title": "euclidean allocation",
    "category": "GIS Analysis Distance Tools",
    "description": "Assigns grid cells in the output raster the value of the nearest target cell in the input image, measured by the Shih and Wu (2004) Euclidean distance transform..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=EuclideanAllocation -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "euclidean distance",
    "category": "GIS Analysis Distance Tools",
    "description": "Calculates the Shih and Wu (2004) Euclidean distance transform..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=EuclideanDistance -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "average overlay",
    "category": "GIS Analysis Overlay Tools",
    "description": "Calculates the average for each grid cell from a group of raster images..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=AverageOverlay -v --wd='/path/to/data/' ^\n-i='image1.dep;image2.dep;image3.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "clip raster to polygon",
    "category": "GIS Analysis Overlay Tools",
    "description": "Clips a raster to a vector polygon..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "--polygons",
        "description": "Input vector polygons file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--maintain_dimension",
        "description": "sMaintain input raster dimensions?"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ClipRasterToPolygon -v ^\n--wd=\"/path/to/data/\" -i=raster.tif --polygons=poly.shp ^\n-o=output.tif --maintain_dimensions \n\n"
    ]
  },
  {
    "title": "count if",
    "category": "GIS Analysis Overlay Tools",
    "description": "Counts the number of occurrences of a specified value in a cell-stack of rasters..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--value",
        "description": "Search value (e.g.\u00a0countif value = 5.0)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CountIf -v --wd='/path/to/data/' ^\n-i='image1.dep;image2.dep;image3.tif' -o=output.tif ^\n--value=5.0 \n\n"
    ]
  },
  {
    "title": "erase polygon from raster",
    "category": "GIS Analysis Overlay Tools",
    "description": "Erases (cuts out) a vector polygon from a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "--polygons",
        "description": "Input vector polygons file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ErasePolygonFromRaster -v ^\n--wd=\"/path/to/data/\" -i='DEM.tif' --polygons='lakes.shp' ^\n-o='output.tif' \n\n"
    ]
  },
  {
    "title": "highest position",
    "category": "GIS Analysis Overlay Tools",
    "description": "Identifies the stack position of the maximum value within a raster stack on a cell-by-cell basis..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=HighestPosition -v ^\n--wd='/path/to/data/' -i='image1.tif;image2.tif;image3.tif' ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "lowest position",
    "category": "GIS Analysis Overlay Tools",
    "description": "Identifies the stack position of the minimum value within a raster stack on a cell-by-cell basis..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LowestPosition -v --wd='/path/to/data/' ^\n-i='image1.tif;image2.tif;image3.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "max absolute overlay",
    "category": "GIS Analysis Overlay Tools",
    "description": "Evaluates the maximum absolute value for each grid cell from a stack of input rasters..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MaxAbsoluteOverlay -v ^\n--wd='/path/to/data/' -i='image1.tif;image2.tif;image3.tif' ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "max overlay",
    "category": "GIS Analysis Overlay Tools",
    "description": "Evaluates the maximum value for each grid cell from a stack of input rasters..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MaxOverlay -v --wd='/path/to/data/' ^\n-i='image1.tif;image2.tif;image3.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "min absolute overlay",
    "category": "GIS Analysis Overlay Tools",
    "description": "Evaluates the minimum absolute value for each grid cell from a stack of input rasters..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MinAbsoluteOverlay -v ^\n--wd='/path/to/data/' -i='image1.tif;image2.tif;image3.tif' ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "min overlay",
    "category": "GIS Analysis Overlay Tools",
    "description": "Evaluates the minimum value for each grid cell from a stack of input rasters..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MinOverlay -v --wd='/path/to/data/' ^\n-i='image1.tif;image2.tif;image3.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "percent equal to",
    "category": "GIS Analysis Overlay Tools",
    "description": "Calculates the percentage of a raster stack that have cell values equal to an input on a cell-by-cell basis..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "--comparison",
        "description": "Input comparison raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PercentEqualTo -v --wd='/path/to/data/' ^\n-i='image1.tif;image2.tif;image3.tif' --comparison='comp.tif' ^\n-o='output.tif' \n\n"
    ]
  },
  {
    "title": "percent greater than",
    "category": "GIS Analysis Overlay Tools",
    "description": "Calculates the percentage of a raster stack that have cell values greather than an input on a cell-by-cell basis..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "--comparison",
        "description": "Input comparison raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PercentGreaterThan -v ^\n--wd='/path/to/data/' -i='image1.tif;image2.tif;image3.tif' ^\n--comparison='comp.tif' -o='output.tif' \n\n"
    ]
  },
  {
    "title": "percent less than",
    "category": "GIS Analysis Overlay Tools",
    "description": "Calculates the percentage of a raster stack that have cell values less than an input on a cell-by-cell basis..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "--comparison",
        "description": "Input comparison raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PercentLessThan -v ^\n--wd='/path/to/data/' -i='image1.tif;image2.tif;image3.tif' ^\n--comparison='comp.tif' -o='output.tif' \n\n"
    ]
  },
  {
    "title": "pick from list",
    "category": "GIS Analysis Overlay Tools",
    "description": "Outputs the value from a raster stack specified by a position raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "--pos_input",
        "description": "Input position raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PickFromList -v --wd='/path/to/data/' ^\n--pos_input=position.tif -i='image1.tif;image2.tif;image3.tif' ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "weighted overlay",
    "category": "GIS Analysis Overlay Tools",
    "description": "Performs a weighted sum on multiple input rasters after converting each image to a common scale. The tool performs a multi-criteria evaluation (MCE)..",
    "parameter": [
      {
        "flag": "--factors",
        "description": "Input factor raster files"
      },
      {
        "flag": "-w",
        "flag_long": "--weights",
        "description": "Weight values, contained in quotes and separated by commas or semicolons. Must"
      },
      {
        "flag": "--cost",
        "description": "Weight values, contained in quotes and separated by commas or semicolons. Must"
      },
      {
        "flag": "--constraints",
        "description": "Input constraints raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--scale_max",
        "description": "Suitability scale maximum value (common values are 1.0, 100.0, and 255.0)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=WeightedOverlay -v ^\n--wd='/path/to/data/' ^\n--factors='image1.tif;image2.tif;image3.tif' ^\n--weights='0.3;0.2;0.5' --cost='false;false;true' -o=output.tif ^\n--scale_max=100.0 \n\n"
    ]
  },
  {
    "title": "weighted sum",
    "category": "GIS Analysis Overlay Tools",
    "description": "Performs a weighted-sum overlay on multiple input raster images..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-w",
        "flag_long": "--weights",
        "description": "Weight values, contained in quotes and separated by commas or semicolons"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=WeightedSum -v --wd='/path/to/data/' ^\n-i='image1.tif;image2.tif;image3.tif' --weights='0.3;0.2;0.5' ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "edge proportion",
    "category": "GIS Analysis Patch Shape Tools",
    "description": "Calculate the proportion of cells in a raster polygon that are edge cells..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--output_text",
        "description": "flag indicating whether a text report should also be output"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=EdgeProportion -v --wd=\"/path/to/data/\" ^\n-i=input.tif -o=output.tif --output_text \n\n"
    ]
  },
  {
    "title": "find patch or class edge cells",
    "category": "GIS Analysis Patch Shape Tools",
    "description": "Finds all cells located on the edge of patch or class features..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FindPatchOrClassEdgeCells -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "radius of gyration",
    "category": "GIS Analysis Patch Shape Tools",
    "description": "Calculates the distance of cells from their polygon\u2019s centroid..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--text_output",
        "description": "Optional text output"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RadiusOfGyration -v ^\n--wd=\"/path/to/data/\" -i=polygons.tif -o=output.tif ^\n--text_output \n\n"
    ]
  },
  {
    "title": "create hexagonal vector grid",
    "category": "GIS Tools",
    "description": "Creates a hexagonal vector grid..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input base file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector polygon file"
      },
      {
        "flag": "--width",
        "description": "The grid cell width"
      },
      {
        "flag": "--orientation",
        "description": "Grid Orientation, \u2018horizontal\u2019 or \u2018vertical\u2019"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CreateHexagonalVectorGrid -v ^\n--wd=\"/path/to/data/\" -i=file.shp -o=outfile.shp --width=10.0 ^\n--orientation=vertical \n\n"
    ]
  },
  {
    "title": "create rectangular vector grid",
    "category": "GIS Tools",
    "description": "Creates a rectangular vector grid..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input base file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector polygon file"
      },
      {
        "flag": "--width",
        "description": "The grid cell width"
      },
      {
        "flag": "--height",
        "description": "The grid cell height"
      },
      {
        "flag": "--xorig",
        "description": "The grid origin x-coordinate"
      },
      {
        "flag": "--yorig",
        "description": "The grid origin y-coordinate"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CreateRectangularVectorGrid -v ^\n--wd=\"/path/to/data/\" -i=file.shp -o=outfile.shp --width=10.0 ^\n--height=10.0 --xorig=0.0 --yorig=0.0 \n\n"
    ]
  },
  {
    "title": "eliminate coincident points",
    "category": "GIS Tools",
    "description": "Removes any coincident, or nearly coincident, points from a vector points file..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector polygon file"
      },
      {
        "flag": "--tolerance",
        "description": "The distance tolerance for points"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=EliminateCoincidentPoints -v ^\n--wd=\"/path/to/data/\" -i=input_file.shp -o=out_file.shp ^\n--tolerance=0.01 \n\n"
    ]
  },
  {
    "title": "extract nodes",
    "category": "GIS Tools",
    "description": "Converts vector lines or polygons into vertex points..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector lines or polygon file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector points file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ExtractNodes -v --wd=\"/path/to/data/\" ^\n-i=file.shp -o=outfile.shp \n\n"
    ]
  },
  {
    "title": "minimum bounding box",
    "category": "GIS Tools",
    "description": "Creates a vector minimum bounding rectangle around vector features..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector polygon file"
      },
      {
        "flag": "--features",
        "description": "Find the minimum bounding rectangles around each individual vector feature"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MinimumBoundingBox -v ^\n--wd=\"/path/to/data/\" -i=file.shp -o=outfile.shp --features \n\n"
    ]
  },
  {
    "title": "minimum convex hull",
    "category": "GIS Tools",
    "description": "Creates a vector convex polygon around vector features..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector polygon file"
      },
      {
        "flag": "--features",
        "description": "Find the hulls around each vector feature"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MinimumConvexHull -v ^\n--wd=\"/path/to/data/\" -i=file.shp -o=outfile.shp --features \n\n"
    ]
  },
  {
    "title": "polygon long axis",
    "category": "GIS Tools",
    "description": "This tool can be used to map the long axis of polygon features..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector polygons file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector polygon file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PolygonLongAxis -v ^\n--wd=\"/path/to/data/\" -i=file.shp -o=outfile.shp \n\n"
    ]
  },
  {
    "title": "polygon short axis",
    "category": "GIS Tools",
    "description": "This tool can be used to map the short axis of polygon features..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector polygons file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector polygon file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PolygonShortAxis -v ^\n--wd=\"/path/to/data/\" -i=file.shp -o=outfile.shp \n\n"
    ]
  },
  {
    "title": "vector hex binning",
    "category": "GIS Tools",
    "description": "Hex-bins a set of vector points..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input base file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector polygon file"
      },
      {
        "flag": "--width",
        "description": "The grid cell width"
      },
      {
        "flag": "--orientation",
        "description": "Grid Orientation, \u2018horizontal\u2019 or \u2018vertical\u2019"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=VectorHexBinning -v ^\n--wd=\"/path/to/data/\" -i=file.shp -o=outfile.shp --width=10.0 ^\n--orientation=vertical \n\n"
    ]
  },
  {
    "title": "aspect",
    "category": "Geomorphometric Analysis",
    "description": "Calculates an aspect raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Aspect -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "dev from mean elev",
    "category": "Geomorphometric Analysis",
    "description": "Calculates deviation from mean elevation..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DevFromMeanElev -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif ^\n--filter=25 \n\n"
    ]
  },
  {
    "title": "diff from mean elev",
    "category": "Geomorphometric Analysis",
    "description": "Calculates difference from mean elevation (equivalent to a high-pass filter)..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DiffFromMeanElev -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif ^\n--filter=25 \n\n"
    ]
  },
  {
    "title": "directional relief",
    "category": "Geomorphometric Analysis",
    "description": "Calculates relief for cells in an input DEM for a specified direction..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--azimuth",
        "description": "Wind azimuth in degrees"
      },
      {
        "flag": "--max_dist",
        "description": "Optional maximum search distance (unspecified if none; in xy units)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DirectionalRelief -v ^\n--wd=\"/path/to/data/\" -i='input.tif' -o=output.tif ^\n--azimuth=315.0 \n\n"
    ]
  },
  {
    "title": "downslope index",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the Hjerdt et al. (2004) downslope index..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--drop",
        "description": "Vertical drop value (default is 2.0)"
      },
      {
        "flag": "--out_type",
        "description": "Output type, options include \u2018tangent\u2019, \u2018degrees\u2019, \u2018radians\u2019, \u2018distance\u2019"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DownslopeIndex -v --wd=\"/path/to/data/\" ^\n--dem=pointer.tif -o=dsi.tif --drop=5.0 --out_type=distance \n\n"
    ]
  },
  {
    "title": "drainage preserving smoothing",
    "category": "Geomorphometric Analysis",
    "description": "Reduces short-scale variation in an input DEM while preserving breaks-in-slope and small drainage features using a modified Sun et al. (2007) algorithm..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filter",
        "description": "Size of the filter kernel"
      },
      {
        "flag": "--norm_diff",
        "description": "Maximum difference in normal vectors, in degrees"
      },
      {
        "flag": "--num_iter",
        "description": "Number of iterations"
      },
      {
        "flag": "--reduction",
        "description": "Maximum Amount to reduce the threshold angle by (0 = full smoothing; 100 = no"
      },
      {
        "flag": "--dfm",
        "description": "Difference from median threshold (in z-units), determines when a location is"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DrainagePreservingSmoothing -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif --filter=15 ^\n--norm_diff=20.0 --num_iter=4 --reduction=90.0 --dfm=0.15 \n\n"
    ]
  },
  {
    "title": "elev above pit",
    "category": "Geomorphometric Analysis",
    "description": "Calculate the elevation of each grid cell above the nearest downstream pit cell or grid edge cell..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ElevAbovePit -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "elev percentile",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the elevation percentile raster from a DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      },
      {
        "flag": "--sig_digits",
        "description": "Number of significant digits"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ElevPercentile -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "elev relative to min max",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the elevation of a location relative to the minimum and maximum elevations in a DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ElevRelativeToMinMax -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "elev relative to watershed min max",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the elevation of a location relative to the minimum and maximum elevations in a watershed..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--watersheds",
        "description": "Input raster watersheds file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ElevRelativeToWatershedMinMax -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif --watersheds=watershed.tif ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "feature preserving denoise",
    "category": "Geomorphometric Analysis",
    "description": "Reduces short-scale variation in an input DEM using a modified Sun et al. (2007) algorithm..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filter",
        "description": "Size of the filter kernel"
      },
      {
        "flag": "--norm_diff",
        "description": "Maximum difference in normal vectors, in degrees"
      },
      {
        "flag": "--num_iter",
        "description": "Number of iterations"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FeaturePreservingDenoise -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif --filter=15 ^\n--norm_diff=20.0 --num_iter=4 \n\n"
    ]
  },
  {
    "title": "fetch analysis",
    "category": "Geomorphometric Analysis",
    "description": "Performs an analysis of fetch or upwind distance to an obstacle..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--azimuth",
        "description": "Wind azimuth in degrees in degrees"
      },
      {
        "flag": "--hgt_inc",
        "description": "Height increment value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FetchAnalysis -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif --azimuth=315.0 \n\n"
    ]
  },
  {
    "title": "fill missing data",
    "category": "Geomorphometric Analysis",
    "description": "Fills nodata holes in a DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filter",
        "description": "Filter size (cells)"
      },
      {
        "flag": "--weight",
        "description": "IDW weight value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FillMissingData -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif -o=output.tif --filter=25 ^\n--weight=1.0 \n\n"
    ]
  },
  {
    "title": "find ridges",
    "category": "Geomorphometric Analysis",
    "description": "Identifies potential ridge and peak grid cells..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--line_thin",
        "description": "Optional flag indicating whether post-processing line-thinning should be"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FindRidges -v --wd=\"/path/to/data/\" ^\n--dem=pointer.tif -o=out.tif --line_thin \n\n"
    ]
  },
  {
    "title": "hillshade",
    "category": "Geomorphometric Analysis",
    "description": "Calculates a hillshade raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--azimuth",
        "description": "Illumination source azimuth in degrees"
      },
      {
        "flag": "--altitude",
        "description": "Illumination source altitude in degrees"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Hillshade -v --wd=\"/path/to/data/\" ^\n-i=DEM.tif -o=output.tif --azimuth=315.0 --altitude=30.0 \n\n"
    ]
  },
  {
    "title": "horizon angle",
    "category": "Geomorphometric Analysis",
    "description": "Calculates horizon angle (maximum upwind slope) for each grid cell in an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--azimuth",
        "description": "Wind azimuth in degrees"
      },
      {
        "flag": "--max_dist",
        "description": "Optional maximum search distance (unspecified if none; in xy units)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=HorizonAngle -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif --azimuth=315.0 \n\n"
    ]
  },
  {
    "title": "hypsometric analysis",
    "category": "Geomorphometric Analysis",
    "description": "Calculates a hypsometric curve for one or more DEMs..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input DEM files"
      },
      {
        "flag": "--watershed",
        "description": "Input watershed files (optional)"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file (default name will be based on input file if unspecified)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=HypsometricAnalysis -v ^\n--wd=\"/path/to/data/\" -i=\"DEM1.tif;DEM2.tif\" ^\n--watershed=\"ws1.tif;ws2.tif\" -o=outfile.html \n\n"
    ]
  },
  {
    "title": "max anisotropy dev",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the maximum anisotropy (directionality) in elevation deviation over a range of spatial scales..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--out_mag",
        "description": "Output raster DEVmax magnitude file"
      },
      {
        "flag": "--out_scale",
        "description": "Output raster DEVmax scale file"
      },
      {
        "flag": "--min_scale",
        "description": "Minimum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--max_scale",
        "description": "Maximum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--step",
        "description": "Step size as any positive non-zero integer"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MaxAnisotropyDev -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif --out_mag=DEVmax_mag.tif ^\n--out_scale=DEVmax_scale.tif --min_scale=1 --max_scale=1000 ^\n--step=5 \n\n"
    ]
  },
  {
    "title": "max anisotropy dev signature",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the anisotropy in deviation from mean for points over a range of spatial scales..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--points",
        "description": "Input vector points file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file"
      },
      {
        "flag": "--min_scale",
        "description": "Minimum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--max_scale",
        "description": "Maximum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--step",
        "description": "Step size as any positive non-zero integer"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MaxAnisotropyDevSignature -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif --points=sites.shp ^\n--output=roughness.html --min_scale=1 --max_scale=1000 ^\n--step=5 \n\n"
    ]
  },
  {
    "title": "max branch length",
    "category": "Geomorphometric Analysis",
    "description": "Lindsay and Seibert\u2019s (2013) branch length index is used to map drainage divides or ridge lines..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--log",
        "description": "Optional flag to request the output be log-transformed"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MaxBranchLength -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "max difference from mean",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the maximum difference from mean elevation over a range of spatial scales..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--out_mag",
        "description": "Output raster DIFFmax magnitude file"
      },
      {
        "flag": "--out_scale",
        "description": "Output raster DIFFmax scale file"
      },
      {
        "flag": "--min_scale",
        "description": "Minimum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--max_scale",
        "description": "Maximum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--step",
        "description": "Step size as any positive non-zero integer"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MaxDifferenceFromMean -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif --out_mag=DEVmax_mag.tif ^\n--out_scale=DEVmax_scale.tif --min_scale=1 --max_scale=1000 ^\n--step=5 \n\n"
    ]
  },
  {
    "title": "max downslope elev change",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the maximum downslope change in elevation between a grid cell and its eight downslope neighbors..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MaxDownslopeElevChange -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=out.tif \n\n"
    ]
  },
  {
    "title": "max elev dev signature",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the maximum elevation deviation over a range of spatial scales and for a set of points..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--points",
        "description": "Input vector points file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file"
      },
      {
        "flag": "--min_scale",
        "description": "Minimum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--max_scale",
        "description": "Maximum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--step",
        "description": "Step size as any positive non-zero integer"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MaxElevDevSignature -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif --points=sites.tif ^\n--output=topo_position.html --min_scale=1 --max_scale=1000 ^\n--step=5 \n\n"
    ]
  },
  {
    "title": "max elevation deviation",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the maximum elevation deviation over a range of spatial scales..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--out_mag",
        "description": "Output raster DEVmax magnitude file"
      },
      {
        "flag": "--out_scale",
        "description": "Output raster DEVmax scale file"
      },
      {
        "flag": "--min_scale",
        "description": "Minimum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--max_scale",
        "description": "Maximum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--step",
        "description": "Step size as any positive non-zero integer"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MaxElevationDeviation -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif --out_mag=DEVmax_mag.tif ^\n--out_scale=DEVmax_scale.tif --min_scale=1 --max_scale=1000 ^\n--step=5 \n\n"
    ]
  },
  {
    "title": "min downslope elev change",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the minimum downslope change in elevation between a grid cell and its eight downslope neighbors..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MinDownslopeElevChange -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=out.tif \n\n"
    ]
  },
  {
    "title": "multiscale roughness",
    "category": "Geomorphometric Analysis",
    "description": "Calculates surface roughness over a range of spatial scales..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--out_mag",
        "description": "Output raster roughness magnitude file"
      },
      {
        "flag": "--out_scale",
        "description": "Output raster roughness scale file"
      },
      {
        "flag": "--min_scale",
        "description": "Minimum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--max_scale",
        "description": "Maximum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--step",
        "description": "Step size as any positive non-zero integer"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MultiscaleRoughness -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif --out_mag=roughness_mag.tif ^\n--out_scale=roughness_scale.tif --min_scale=1 --max_scale=1000 ^\n--step=5 \n\n"
    ]
  },
  {
    "title": "multiscale roughness signature",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the surface roughness for points over a range of spatial scales..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--points",
        "description": "Input vector points file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file"
      },
      {
        "flag": "--min_scale",
        "description": "Minimum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--max_scale",
        "description": "Maximum search neighbourhood radius in grid cells"
      },
      {
        "flag": "--step",
        "description": "Step size as any positive non-zero integer"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MultiscaleRoughnessSignature -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif --points=sites.shp ^\n--output=roughness.html --min_scale=1 --max_scale=1000 ^\n--step=5 \n\n"
    ]
  },
  {
    "title": "multiscale topographic position image",
    "category": "Geomorphometric Analysis",
    "description": "Creates a multiscale topographic position image from three DEVmax rasters of differing spatial scale ranges..",
    "parameter": [
      {
        "flag": "--local",
        "description": "Input local-scale topographic position (DEVmax) raster file"
      },
      {
        "flag": "--meso",
        "description": "Input meso-scale topographic position (DEVmax) raster file"
      },
      {
        "flag": "--broad",
        "description": "Input broad-scale topographic position (DEVmax) raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--lightness",
        "description": "Image lightness value (default is 1.2)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MultiscaleTopographicPositionImage -v ^\n--wd=\"/path/to/data/\" --local=DEV_local.tif --meso=DEV_meso.tif ^\n--broad=DEV_broad.tif -o=output.tif --lightness=1.5 \n\n"
    ]
  },
  {
    "title": "num downslope neighbours",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the number of downslope neighbours to each grid cell in a DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=NumDownslopeNeighbours -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "num upslope neighbours",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the number of upslope neighbours to each grid cell in a DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=NumUpslopeNeighbours -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "pennock landform class",
    "category": "Geomorphometric Analysis",
    "description": "Classifies hillslope zones based on slope, profile curvature, and plan curvature..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--slope",
        "description": "Slope threshold value, in degrees (default is 3.0)"
      },
      {
        "flag": "--prof",
        "description": "Profile curvature threshold value (default is 0.1)"
      },
      {
        "flag": "--plan",
        "description": "Plan curvature threshold value (default is 0.0)"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PennockLandformClass -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif --slope=3.0 ^\n--prof=0.1 --plan=0.0 \n\n"
    ]
  },
  {
    "title": "percent elev range",
    "category": "Geomorphometric Analysis",
    "description": "Calculates percent of elevation range from a DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PercentElevRange -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "plan curvature",
    "category": "Geomorphometric Analysis",
    "description": "Calculates a plan (contour) curvature raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PlanCurvature -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "profile",
    "category": "Geomorphometric Analysis",
    "description": "Plots profiles from digital surface models..",
    "parameter": [
      {
        "flag": "--lines",
        "description": "Input vector line file"
      },
      {
        "flag": "--surface",
        "description": "Input raster surface file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Profile -v --wd=\"/path/to/data/\" ^\n--lines=profile.shp --surface=dem.tif -o=profile.html \n\n"
    ]
  },
  {
    "title": "profile curvature",
    "category": "Geomorphometric Analysis",
    "description": "Calculates a profile curvature raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ProfileCurvature -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "relative aspect",
    "category": "Geomorphometric Analysis",
    "description": "Calculates relative aspect (relative to a user-specified direction) from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--azimuth",
        "description": "Illumination source azimuth"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RelativeAspect -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif --azimuth=180.0 \n\n"
    ]
  },
  {
    "title": "relative stream power index",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the relative stream power index..",
    "parameter": [
      {
        "flag": "--sca",
        "description": "Input raster specific contributing area (SCA) file"
      },
      {
        "flag": "--slope",
        "description": "Input raster slope file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--exponent",
        "description": "SCA exponent value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RelativeStreamPowerIndex -v ^\n--wd=\"/path/to/data/\" --sca='flow_accum.tif' ^\n--slope='slope.tif' -o=output.tif --exponent=1.1 \n\n"
    ]
  },
  {
    "title": "relative topographic position",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the relative topographic position index from a DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RelativeTopographicPosition -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif ^\n--filter=25 \n\n"
    ]
  },
  {
    "title": "remove off terrain objects",
    "category": "Geomorphometric Analysis",
    "description": "Removes off-terrain objects from a raster digital elevation model (DEM)..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filter",
        "description": "Filter size (cells)"
      },
      {
        "flag": "--slope",
        "description": "Slope threshold value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RemoveOffTerrainObjects -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=bare_earth_DEM.tif ^\n--filter=25 --slope=10.0 \n\n"
    ]
  },
  {
    "title": "ruggedness index",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the Riley et al.\u2019s (1999) terrain ruggedness index from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RuggednessIndex -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "sediment transport index",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the sediment transport index..",
    "parameter": [
      {
        "flag": "--sca",
        "description": "Input raster specific contributing area (SCA) file"
      },
      {
        "flag": "--slope",
        "description": "Input raster slope file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--sca_exponent",
        "description": "SCA exponent value"
      },
      {
        "flag": "--slope_exponent",
        "description": "Slope exponent value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=SedimentTransportIndex -v ^\n--wd=\"/path/to/data/\" --sca='flow_accum.tif' ^\n--slope='slope.tif' -o=output.tif --sca_exponent=0.5 ^\n--slope_exponent=1.0 \n\n"
    ]
  },
  {
    "title": "slope",
    "category": "Geomorphometric Analysis",
    "description": "Calculates a slope raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Slope -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "slope vs elevation plot",
    "category": "Geomorphometric Analysis",
    "description": "Creates a slope vs.\u00a0elevation plot for one or more DEMs..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input DEM files"
      },
      {
        "flag": "--watershed",
        "description": "Input watershed files (optional)"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file (default name will be based on input file if unspecified)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=SlopeVsElevationPlot -v ^\n--wd=\"/path/to/data/\" -i=\"DEM1.tif;DEM2.tif\" ^\n--watershed=\"ws1.tif;ws2.tif\" -o=outfile.html \n\n"
    ]
  },
  {
    "title": "standard deviation of slope",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the standard deviation of slope from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster DEM file"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=StandardDeviationOfSlope -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "tangential curvature",
    "category": "Geomorphometric Analysis",
    "description": "Calculates a tangential curvature raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=TangentialCurvature -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "total curvature",
    "category": "Geomorphometric Analysis",
    "description": "Calculates a total curvature raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--zfactor",
        "description": "Optional multiplier for when the vertical and horizontal units are not the same"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=TotalCurvature -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "viewshed",
    "category": "Geomorphometric Analysis",
    "description": "Identifies the viewshed for a point or set of points..",
    "parameter": [
      {
        "flag": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--stations",
        "description": "Input viewing station vector file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--height",
        "description": "Viewing station height, in z units"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Viewshed -v --wd=\"/path/to/data/\" ^\n--dem='dem.tif' --stations='stations.shp' -o=output.tif ^\n--height=10.0 \n\n"
    ]
  },
  {
    "title": "visibility index",
    "category": "Geomorphometric Analysis",
    "description": "Estimates the relative visibility of sites in a DEM..",
    "parameter": [
      {
        "flag": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--height",
        "description": "Viewing station height, in z units"
      },
      {
        "flag": "--res_factor",
        "description": "The resolution factor determines the density of measured viewsheds"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=VisibilityIndex -v ^\n--wd=\"/path/to/data/\" --dem=dem.tif -o=output.tif ^\n--height=10.0 --res_factor=4 \n\n"
    ]
  },
  {
    "title": "wetness index",
    "category": "Geomorphometric Analysis",
    "description": "Calculates the topographic wetness index, Ln(A / tan(slope))..",
    "parameter": [
      {
        "flag": "--sca",
        "description": "Input raster specific contributing area (SCA) file"
      },
      {
        "flag": "--slope",
        "description": "Input raster slope file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=WetnessIndex -v --wd=\"/path/to/data/\" ^\n--sca='flow_accum.tif' --slope='slope.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "average flowpath slope",
    "category": "Hydrological Analysis",
    "description": "Measures the average slope gradient from each grid cell to all upslope divide cells..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=AverageFlowpathSlope -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "average upslope flowpath length",
    "category": "Hydrological Analysis",
    "description": "Measures the average length of all upslope flowpaths draining each grid cell..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=AverageUpslopeFlowpathLength -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "basins",
    "category": "Hydrological Analysis",
    "description": "Identifies drainage basins that drain to the DEM edge..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Basins -v --wd=\"/path/to/data/\" ^\n--d8_pntr='d8pntr.tif' -o='output.tif' \n\n"
    ]
  },
  {
    "title": "breach depressions",
    "category": "Hydrological Analysis",
    "description": "Breaches all of the depressions in a DEM using Lindsay\u2019s (2016) algorithm. This should be preferred over depression filling in most cases..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--max_depth",
        "description": "Optional maximum breach depth (default is Inf)"
      },
      {
        "flag": "--max_length",
        "description": "Optional maximum breach channel length (in grid cells; default is Inf)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=BreachDepressions -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "breach single cell pits",
    "category": "Hydrological Analysis",
    "description": "Removes single-cell pits from an input DEM by breaching..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=BreachSingleCellPits -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "d flow accumulation",
    "category": "Hydrological Analysis",
    "description": "Calculates a D8 flow accumulation raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--out_type",
        "description": "Output type; one of \u2018cells\u2019, \u2018specific contributing area\u2019 (default), and"
      },
      {
        "flag": "--log",
        "description": "Optional flag to request the output be log-transformed"
      },
      {
        "flag": "--clip",
        "description": "Optional flag to request clipping the display max by 1%"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=D8FlowAccumulation -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.dtifep ^\n--out_type='cells'\n>>./whitebox_tools -r=D8FlowAccumulation -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif ^\n--out_type='specific catchment area' --log --clip \n\n"
    ]
  },
  {
    "title": "d mass flux",
    "category": "Hydrological Analysis",
    "description": "Performs a D8 mass flux calculation..",
    "parameter": [
      {
        "flag": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--loading",
        "description": "Input loading raster file"
      },
      {
        "flag": "--efficiency",
        "description": "Input efficiency raster file"
      },
      {
        "flag": "--absorption",
        "description": "Input absorption raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=D8MassFlux -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif --loading=load.tif --efficiency=eff.tif ^\n--absorption=abs.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "d pointer",
    "category": "Hydrological Analysis",
    "description": "Calculates a D8 flow pointer raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=D8Pointer -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "d inf flow accumulation",
    "category": "Hydrological Analysis",
    "description": "Calculates a D-infinity flow accumulation raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--out_type",
        "description": "Output type; one of \u2018cells\u2019, \u2018sca\u2019 (default), and \u2018ca\u2019"
      },
      {
        "flag": "--threshold",
        "description": "Optional convergence threshold parameter, in grid cells; default is inifinity"
      },
      {
        "flag": "--log",
        "description": "Optional flag to request the output be log-transformed"
      },
      {
        "flag": "--clip",
        "description": "Optional flag to request clipping the display max by 1%"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DInfFlowAccumulation -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif ^\n--out_type=sca\n>>./whitebox_tools -r=DInfFlowAccumulation -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif ^\n--out_type=sca --threshold=10000 --log --clip \n\n"
    ]
  },
  {
    "title": "d inf mass flux",
    "category": "Hydrological Analysis",
    "description": "Performs a D-infinity mass flux calculation..",
    "parameter": [
      {
        "flag": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--loading",
        "description": "Input loading raster file"
      },
      {
        "flag": "--efficiency",
        "description": "Input efficiency raster file"
      },
      {
        "flag": "--absorption",
        "description": "Input absorption raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DInfMassFlux -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif --loading=load.tif --efficiency=eff.tif ^\n--absorption=abs.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "d inf pointer",
    "category": "Hydrological Analysis",
    "description": "Calculates a D-infinity flow pointer (flow direction) raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DInfPointer -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif \n\n"
    ]
  },
  {
    "title": "depth in sink",
    "category": "Hydrological Analysis",
    "description": "Measures the depth of sinks (depressions) in a DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether the background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DepthInSink -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif --zero_background \n\n"
    ]
  },
  {
    "title": "downslope distance to stream",
    "category": "Hydrological Analysis",
    "description": "Measures distance to the nearest downslope stream cell..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DownslopeDistanceToStream -v ^\n--wd=\"/path/to/data/\" --dem='dem.tif' --streams='streams.tif' ^\n-o='output.tif' \n\n"
    ]
  },
  {
    "title": "downslope flowpath length",
    "category": "Hydrological Analysis",
    "description": "Calculates the downslope flowpath length from each cell to basin outlet..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input D8 pointer raster file"
      },
      {
        "flag": "--watersheds",
        "description": "Optional input watershed raster file"
      },
      {
        "flag": "--weights",
        "description": "Optional input weights raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DownslopeFlowpathLength -v ^\n--wd=\"/path/to/data/\" --d8_pntr=pointer.tif ^\n-o=flowpath_len.tif\n>>./whitebox_tools ^\n-r=DownslopeFlowpathLength -v --wd=\"/path/to/data/\" ^\n--d8_pntr=pointer.tif --watersheds=basin.tif ^\n--weights=weights.tif -o=flowpath_len.tif --esri_pntr \n\n"
    ]
  },
  {
    "title": "elevation above stream",
    "category": "Hydrological Analysis",
    "description": "Calculates the elevation of cells above the nearest downslope stream cell..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ElevationAboveStream -v ^\n--wd=\"/path/to/data/\" --dem='dem.tif' --streams='streams.tif' ^\n-o='output.tif' \n\n"
    ]
  },
  {
    "title": "elevation above stream euclidean",
    "category": "Hydrological Analysis",
    "description": "Calculates the elevation of cells above the nearest (Euclidean distance) stream cell..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ElevationAboveStreamEuclidean -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif --streams=streams.tif ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "fd flow accumulation",
    "category": "Hydrological Analysis",
    "description": "Calculates an FD8 flow accumulation raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--out_type",
        "description": "Output type; one of \u2018cells\u2019, \u2018specific contributing area\u2019 (default), and"
      },
      {
        "flag": "--exponent",
        "description": "Optional exponent parameter; default is 1.1"
      },
      {
        "flag": "--threshold",
        "description": "Optional convergence threshold parameter, in grid cells; default is inifinity"
      },
      {
        "flag": "--log",
        "description": "Optional flag to request the output be log-transformed"
      },
      {
        "flag": "--clip",
        "description": "Optional flag to request clipping the display max by 1%"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FD8FlowAccumulation -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif ^\n--out_type='cells'\n>>./whitebox_tools -r=FD8FlowAccumulation -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif ^\n--out_type='catchment area' --exponent=1.5 --threshold=10000 ^\n--log --clip \n\n"
    ]
  },
  {
    "title": "fd pointer",
    "category": "Hydrological Analysis",
    "description": "Calculates an FD8 flow pointer raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FD8Pointer -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "fill burn",
    "category": "Hydrological Analysis",
    "description": "Burns streams into a DEM using the FillBurn (Saunders, 1999) method..",
    "parameter": [
      {
        "flag": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--streams",
        "description": "Input vector streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FillBurn -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif --streams=streams.shp -o=dem_burned.tif \n\n"
    ]
  },
  {
    "title": "fill depressions",
    "category": "Hydrological Analysis",
    "description": "Fills all of the depressions in a DEM. Depression breaching should be preferred in most cases..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--fix_flats",
        "description": "Optional flag indicating whether flat areas should have a small gradient applied"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FillDepressions -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif ^\n--fix_flats \n\n"
    ]
  },
  {
    "title": "fill single cell pits",
    "category": "Hydrological Analysis",
    "description": "Raises pit cells to the elevation of their lowest neighbour..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FillSingleCellPits -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=NewRaster.tif \n\n"
    ]
  },
  {
    "title": "find no flow cells",
    "category": "Hydrological Analysis",
    "description": "Finds grid cells with no downslope neighbours..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FindNoFlowCells -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=NewRaster.tif \n\n"
    ]
  },
  {
    "title": "find parallel flow",
    "category": "Hydrological Analysis",
    "description": "Finds areas of parallel flow in D8 flow direction rasters..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input D8 pointer raster file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FindParallelFlow -v ^\n--wd=\"/path/to/data/\" --d8_pntr=pointer.tif ^\n-o=out.tif\n>>./whitebox_tools -r=FindParallelFlow -v ^\n--wd=\"/path/to/data/\" --d8_pntr=pointer.tif -o=out.tif ^\n--streams='streams.tif' \n\n"
    ]
  },
  {
    "title": "flatten lakes",
    "category": "Hydrological Analysis",
    "description": "Flattens lake polygons in a raster DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--lakes",
        "description": "Input lakes vector polygons file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FlattenLakes -v --wd=\"/path/to/data/\" ^\n--dem='DEM.tif' --lakes='lakes.shp' -o='output.tif' \n\n"
    ]
  },
  {
    "title": "flood order",
    "category": "Hydrological Analysis",
    "description": "Assigns each DEM grid cell its order in the sequence of inundations that are encountered during a search starting from the edges, moving inward at increasing elevations..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FloodOrder -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "flow accumulation full workflow",
    "category": "Hydrological Analysis",
    "description": "Resolves all of the depressions in a DEM, outputting a breached DEM, an aspect-aligned non-divergent flow pointer, and a flow accumulation raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "--out_dem",
        "description": "Output raster DEM file"
      },
      {
        "flag": "--out_pntr",
        "description": "Output raster flow pointer file"
      },
      {
        "flag": "--out_accum",
        "description": "Output raster flow accumulation file"
      },
      {
        "flag": "--out_type",
        "description": "Output type; one of \u2018cells\u2019, \u2018sca\u2019 (default), and \u2018ca\u2019"
      },
      {
        "flag": "--log",
        "description": "Optional flag to request the output be log-transformed"
      },
      {
        "flag": "--clip",
        "description": "Optional flag to request clipping the display max by 1%"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FlowAccumulationFullWorkflow -v ^\n--wd=\"/path/to/data/\" --dem='DEM.tif' ^\n--out_dem='DEM_filled.tif' --out_pntr='pointer.tif' ^\n--out_accum='accum.tif' --out_type=sca --log --clip \n\n"
    ]
  },
  {
    "title": "flow length diff",
    "category": "Hydrological Analysis",
    "description": "Calculates the local maximum absolute difference in downslope flowpath length, useful in mapping drainage divides and ridges..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input D8 pointer raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FlowLengthDiff -v --wd=\"/path/to/data/\" ^\n--d8_pntr=pointer.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "hillslopes",
    "category": "Hydrological Analysis",
    "description": "Identifies the individual hillslopes draining to each link in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Hillslopes -v --wd=\"/path/to/data/\" ^\n--d8_pntr='d8pntr.tif' --streams='streams.tif' ^\n-o='output.tif' \n\n"
    ]
  },
  {
    "title": "impoundment index",
    "category": "Hydrological Analysis",
    "description": "Calculates the impoundment size resulting from damming a DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output file"
      },
      {
        "flag": "--out_type",
        "description": "Output type; one of \u2018depth\u2019 (default), \u2018volume\u2019, and \u2018area\u2019"
      },
      {
        "flag": "--damlength",
        "description": "Maximum length of thr dam"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ImpoundmentIndex -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=out.tif ^\n--out_type=depth --damlength=11 \n\n"
    ]
  },
  {
    "title": "isobasins",
    "category": "Hydrological Analysis",
    "description": "Divides a landscape into nearly equal sized drainage basins (i.e.\u00a0watersheds)..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--size",
        "description": "Target basin size, in grid cells"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Isobasins -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif --size=1000 \n\n"
    ]
  },
  {
    "title": "jenson snap pour points",
    "category": "Hydrological Analysis",
    "description": "Moves outlet points used to specify points of interest in a watershedding operation to the nearest stream cell..",
    "parameter": [
      {
        "flag": "--pour_pts",
        "description": "Input vector pour points (outlet) file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector file"
      },
      {
        "flag": "--snap_dist",
        "description": "Maximum snap distance in map units"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=JensonSnapPourPoints -v ^\n--wd=\"/path/to/data/\" --pour_pts='pour_pts.shp' ^\n--streams='streams.tif' -o='output.shp' --snap_dist=15.0 \n\n"
    ]
  },
  {
    "title": "max upslope flowpath length",
    "category": "Hydrological Analysis",
    "description": "Measures the maximum length of all upslope flowpaths draining each grid cell..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MaxUpslopeFlowpathLength -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif ^\n-o=output.tif\n>>./whitebox_tools -r=MaxUpslopeFlowpathLength -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=output.tif --log ^\n--clip \n\n"
    ]
  },
  {
    "title": "num inflowing neighbours",
    "category": "Hydrological Analysis",
    "description": "Computes the number of inflowing neighbours to each cell in an input DEM based on the D8 algorithm..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=NumInflowingNeighbours -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "raise walls",
    "category": "Hydrological Analysis",
    "description": "Raises walls in a DEM along a line or around a polygon, e.g.\u00a0a watershed..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector lines or polygons file"
      },
      {
        "flag": "--breach",
        "description": "Optional input vector breach lines"
      },
      {
        "flag": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--height",
        "description": "Wall height"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RaiseWalls -v --wd=\"/path/to/data/\" ^\n-i=watershed.shp --dem=dem.tif -o=output.tif ^\n--height=25.0\n>>./whitebox_tools -r=RaiseWalls -v ^\n--wd=\"/path/to/data/\" -i=watershed.shp --breach=outlet.shp ^\n--dem=dem.tif -o=output.tif --height=25.0 \n\n"
    ]
  },
  {
    "title": "rho pointer",
    "category": "Hydrological Analysis",
    "description": "Calculates a stochastic Rho8 flow pointer raster from an input DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Rho8Pointer -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "sink",
    "category": "Hydrological Analysis",
    "description": "Identifies the depressions in a DEM, giving each feature a unique identifier..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Sink -v --wd=\"/path/to/data/\" ^\n--dem=DEM.tif -o=output.tif --zero_background \n\n"
    ]
  },
  {
    "title": "snap pour points",
    "category": "Hydrological Analysis",
    "description": "Moves outlet points used to specify points of interest in a watershedding operation to the cell with the highest flow accumulation in its neighbourhood..",
    "parameter": [
      {
        "flag": "--pour_pts",
        "description": "Input vector pour points (outlet) file"
      },
      {
        "flag": "--flow_accum",
        "description": "Input raster D8 flow accumulation file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector file"
      },
      {
        "flag": "--snap_dist",
        "description": "Maximum snap distance in map units"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=SnapPourPoints -v --wd=\"/path/to/data/\" ^\n--pour_pts='pour_pts.shp' --flow_accum='d8accum.tif' ^\n-o='output.shp' --snap_dist=15.0 \n\n"
    ]
  },
  {
    "title": "stochastic depression analysis",
    "category": "Hydrological Analysis",
    "description": "Preforms a stochastic analysis of depressions within a DEM..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output file"
      },
      {
        "flag": "--rmse",
        "description": "The DEM\u2019s root-mean-square-error (RMSE), in z units. This determines error"
      },
      {
        "flag": "--range",
        "description": "The error field\u2019s correlation length, in xy-units"
      },
      {
        "flag": "--iterations",
        "description": "The number of iterations"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=StochasticDepressionAnalysis -v ^\n--wd=\"/path/to/data/\" --dem=DEM.tif -o=out.tif --rmse=10.0 ^\n--range=850.0 --iterations=2500 \n\n"
    ]
  },
  {
    "title": "strahler order basins",
    "category": "Hydrological Analysis",
    "description": "Identifies Strahler-order basins from an input stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=StrahlerOrderBasins -v ^\n--wd=\"/path/to/data/\" --d8_pntr='d8pntr.tif' ^\n--streams='streams.tif' -o='output.tif' \n\n"
    ]
  },
  {
    "title": "subbasins",
    "category": "Hydrological Analysis",
    "description": "Identifies the catchments, or sub-basin, draining to each link in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input D8 pointer raster file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Subbasins -v --wd=\"/path/to/data/\" ^\n--d8_pntr='d8pntr.tif' --streams='streams.tif' ^\n-o='output.tif' \n\n"
    ]
  },
  {
    "title": "trace downslope flowpaths",
    "category": "Hydrological Analysis",
    "description": "Traces downslope flowpaths from one or more target sites (i.e.\u00a0seed points)..",
    "parameter": [
      {
        "flag": "--seed_pts",
        "description": "Input vector seed points file"
      },
      {
        "flag": "--d8_pntr",
        "description": "Input D8 pointer raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=TraceDownslopeFlowpaths -v ^\n--wd=\"/path/to/data/\" --seed_pts=seeds.shp ^\n--flow_dir=flow_directions.tif --output=flow_paths.tif \n\n"
    ]
  },
  {
    "title": "unnest basins",
    "category": "Hydrological Analysis",
    "description": "Extract whole watersheds for a set of outlet points..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input D8 pointer raster file"
      },
      {
        "flag": "--pour_pts",
        "description": "Input vector pour points (outlet) file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=UnnestBasins -v --wd=\"/path/to/data/\" ^\n--d8_pntr='d8pntr.tif' --pour_pts='pour_pts.shp' ^\n-o='output.tif' \n\n"
    ]
  },
  {
    "title": "watershed",
    "category": "Hydrological Analysis",
    "description": "Identifies the watershed, or drainage basin, draining to a set of target cells..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input D8 pointer raster file"
      },
      {
        "flag": "--pour_pts",
        "description": "Input vector pour points (outlet) file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Watershed -v --wd=\"/path/to/data/\" ^\n--d8_pntr='d8pntr.tif' --pour_pts='pour_pts.shp' ^\n-o='output.tif' \n\n"
    ]
  },
  {
    "title": "change vector analysis",
    "category": "Image Processing Tools",
    "description": "Performs a change vector analysis on a two-date multi-spectral dataset..",
    "parameter": [
      {
        "flag": "--date1",
        "description": "Input raster files for the earlier date"
      },
      {
        "flag": "--date2",
        "description": "Input raster files for the later date"
      },
      {
        "flag": "--magnitude",
        "description": "Output vector magnitude raster file"
      },
      {
        "flag": "--direction",
        "description": "Output vector Direction raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ChangeVectorAnalysis -v ^\n--wd=\"/path/to/data/\" ^\n--date1='d1_band1.tif;d1_band2.tif;d1_band3.tif' ^\n--date2='d2_band1.tif;d2_band2.tif;d2_band3.tif' ^\n--magnitude=mag_out.tif --direction=dir_out.tif \n\n"
    ]
  },
  {
    "title": "closing",
    "category": "Image Processing Tools",
    "description": "A closing is a mathematical morphology operating involving an erosion (min filter) of a dilation (max filter) set..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Closing -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "create colour composite",
    "category": "Image Processing Tools",
    "description": "Creates a colour-composite image from three bands of multispectral imagery..",
    "parameter": [
      {
        "flag": "--red",
        "description": "Input red band image file"
      },
      {
        "flag": "--green",
        "description": "Input green band image file"
      },
      {
        "flag": "--blue",
        "description": "Input blue band image file"
      },
      {
        "flag": "--opacity",
        "description": "Input opacity band image file (optional)"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output colour composite file"
      },
      {
        "flag": "--enhance",
        "description": "Optional flag indicating whether a balance contrast enhancement is performed"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CreateColourComposite -v ^\n--wd=\"/path/to/data/\" --red=band3.tif --green=band2.tif ^\n--blue=band1.tif -o=output.tif\n>>./whitebox_tools ^\n-r=CreateColourComposite -v --wd=\"/path/to/data/\" ^\n--red=band3.tif --green=band2.tif --blue=band1.tif ^\n--opacity=a.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "flip image",
    "category": "Image Processing Tools",
    "description": "Reflects an image in the vertical or horizontal axis..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--direction",
        "description": "Direction of reflection; options include \u2018v\u2019 (vertical), \u2018h\u2019 (horizontal), and"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FlipImage -v --wd=\"/path/to/data/\" ^\n--input=in.tif -o=out.tif --direction=h \n\n"
    ]
  },
  {
    "title": "ihs to rgb",
    "category": "Image Processing Tools",
    "description": "Converts intensity, hue, and saturation (IHS) images into red, green, and blue (RGB) images..",
    "parameter": [
      {
        "flag": "--intensity",
        "description": "Input intensity file"
      },
      {
        "flag": "--hue",
        "description": "Input hue file"
      },
      {
        "flag": "--saturation",
        "description": "Input saturation file"
      },
      {
        "flag": "--red",
        "description": "Output red band file. Optionally specified if colour-composite not specified"
      },
      {
        "flag": "--green",
        "description": "Output green band file. Optionally specified if colour-composite not specified"
      },
      {
        "flag": "--blue",
        "description": "Output blue band file. Optionally specified if colour-composite not specified"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output colour-composite file. Only used if individual bands are not specified"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=IhsToRgb -v --wd=\"/path/to/data/\" ^\n--intensity=intensity.tif --hue=hue.tif ^\n--saturation=saturation.tif --red=band3.tif --green=band2.tif ^\n--blue=band1.tif\n>>./whitebox_tools -r=IhsToRgb -v ^\n--wd=\"/path/to/data/\" --intensity=intensity.tif --hue=hue.tif ^\n--saturation=saturation.tif --composite=image.tif \n\n"
    ]
  },
  {
    "title": "image stack profile",
    "category": "Image Processing Tools",
    "description": "Plots an image stack profile (i.e.\u00a0signature) for a set of points and multispectral images..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input multispectral image files"
      },
      {
        "flag": "--points",
        "description": "Input vector points file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ImageStackProfile -v ^\n--wd=\"/path/to/data/\" -i='image1.tif;image2.tif;image3.tif' ^\n--points=pts.shp -o=output.html \n\n"
    ]
  },
  {
    "title": "integral image",
    "category": "Image Processing Tools",
    "description": "Transforms an input image (summed area table) into its integral image equivalent..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=IntegralImage -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "k means clustering",
    "category": "Image Processing Tools",
    "description": "Performs a k-means clustering operation on a multi-spectral dataset..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--out_html",
        "description": "Output HTML report file"
      },
      {
        "flag": "--classes",
        "description": "Number of classes"
      },
      {
        "flag": "--max_iterations",
        "description": "Maximum number of iterations"
      },
      {
        "flag": "--class_change",
        "description": "Minimum percent of cells changed between iterations before completion"
      },
      {
        "flag": "--initialize",
        "description": "How to initialize cluster centres?"
      },
      {
        "flag": "--min_class_size",
        "description": "Minimum class size, in pixels"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=KMeansClustering -v ^\n--wd='/path/to/data/' -i='image1.tif;image2.tif;image3.tif' ^\n-o=output.tif --out_html=report.html --classes=15 ^\n--max_iterations=25 --class_change=1.5 --initialize='random' ^\n--min_class_size=500 \n\n"
    ]
  },
  {
    "title": "line thinning",
    "category": "Image Processing Tools",
    "description": "Performs line thinning a on Boolean raster image; intended to be used with the RemoveSpurs tool..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LineThinning -v --wd=\"/path/to/data/\" ^\n--input=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "modified k means clustering",
    "category": "Image Processing Tools",
    "description": "Performs a modified k-means clustering operation on a multi-spectral dataset..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--out_html",
        "description": "Output HTML report file"
      },
      {
        "flag": "--start_clusters",
        "description": "Initial number of clusters"
      },
      {
        "flag": "--merger_dist",
        "description": "Cluster merger distance"
      },
      {
        "flag": "--max_iterations",
        "description": "Maximum number of iterations"
      },
      {
        "flag": "--class_change",
        "description": "Minimum percent of cells changed between iterations before completion"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ModifiedKMeansClustering -v ^\n--wd='/path/to/data/' -i='image1.tif;image2.tif;image3.tif' ^\n-o=output.tif --out_html=report.html --start_clusters=100 ^\n--merger_dist=30.0 --max_iterations=25 --class_change=1.5 \n\n"
    ]
  },
  {
    "title": "mosaic",
    "category": "Image Processing Tools",
    "description": "Mosaics two or more images together..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--method",
        "description": "Resampling method; options include \u2018nn\u2019 (nearest neighbour), \u2018bilinear\u2019, and"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Mosaic -v --wd='/path/to/data/' ^\n-i='image1.tif;image2.tif;image3.tif' -o=dest.tif ^\n--method='cc \n\n"
    ]
  },
  {
    "title": "normalized difference vegetation index",
    "category": "Image Processing Tools",
    "description": "Calculates the normalized difference vegetation index (NDVI) from near-infrared and red imagery..",
    "parameter": [
      {
        "flag": "--nir",
        "description": "Input near-infrared band image"
      },
      {
        "flag": "--red",
        "description": "Input red band image"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--clip",
        "description": "Optional amount to clip the distribution tails by, in percent"
      },
      {
        "flag": "--osavi",
        "description": "Optional flag indicating whether the optimized soil-adjusted veg index (OSAVI)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=NormalizedDifferenceVegetationIndex -v ^\n--wd=\"/path/to/data/\" --nir=band4.tif --red=band3.tif ^\n-o=output.tif\n>>./whitebox_tools ^\n-r=NormalizedDifferenceVegetationIndex -v --wd=\"/path/to/data/\" ^\n--nir=band4.tif --red=band3.tif -o=output.tif --clip=1.0 ^\n--osavi \n\n"
    ]
  },
  {
    "title": "opening",
    "category": "Image Processing Tools",
    "description": "An opening is a mathematical morphology operating involving a dilation (max filter) of an erosion (min filter) set..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Opening -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "remove spurs",
    "category": "Image Processing Tools",
    "description": "Removes the spurs (pruning operation) from a Boolean line image.; intended to be used on the output of the LineThinning tool..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--iterations",
        "description": "Maximum number of iterations"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RemoveSpurs -v --wd=\"/path/to/data/\" ^\n--input=DEM.tif -o=output.tif --iterations=10 \n\n"
    ]
  },
  {
    "title": "resample",
    "category": "Image Processing Tools",
    "description": "Resamples one or more input images into a destination image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "--destination",
        "description": "Destination raster file"
      },
      {
        "flag": "--method",
        "description": "Resampling method; options include \u2018nn\u2019 (nearest neighbour), \u2018bilinear\u2019, and"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Resample -v --wd='/path/to/data/' ^\n-i='image1.tif;image2.tif;image3.tif' --destination=dest.tif ^\n--method='cc \n\n"
    ]
  },
  {
    "title": "rgb to ihs",
    "category": "Image Processing Tools",
    "description": "Converts red, green, and blue (RGB) images into intensity, hue, and saturation (IHS) images..",
    "parameter": [
      {
        "flag": "--red",
        "description": "Input red band image file. Optionally specified if colour-composite not"
      },
      {
        "flag": "--green",
        "description": "Input green band image file. Optionally specified if colour-composite not"
      },
      {
        "flag": "--blue",
        "description": "Input blue band image file. Optionally specified if colour-composite not"
      },
      {
        "flag": "--composite",
        "description": "Input colour-composite image file. Only used if individual bands are not"
      },
      {
        "flag": "--intensity",
        "description": "Output intensity raster file"
      },
      {
        "flag": "--hue",
        "description": "Output hue raster file"
      },
      {
        "flag": "--saturation",
        "description": "Output saturation raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RgbToIhs -v --wd=\"/path/to/data/\" ^\n--red=band3.tif --green=band2.tif --blue=band1.tif ^\n--intensity=intensity.tif --hue=hue.tif ^\n--saturation=saturation.tif\n>>./whitebox_tools -r=RgbToIhs -v ^\n--wd=\"/path/to/data/\" --composite=image.tif ^\n--intensity=intensity.tif --hue=hue.tif ^\n--saturation=saturation.tif \n\n"
    ]
  },
  {
    "title": "split colour composite",
    "category": "Image Processing Tools",
    "description": "This tool splits an RGB colour composite image into seperate multispectral images..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input colour composite image file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file (suffixes of \u2019_r\u2019, \u2019_g\u2019, and \u2019_b\u2019 will be appended)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=SplitColourComposite -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "thicken raster line",
    "category": "Image Processing Tools",
    "description": "Thickens single-cell wide lines within a raster image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ThickenRasterLine -v ^\n--wd=\"/path/to/data/\" --input=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "tophat transform",
    "category": "Image Processing Tools",
    "description": "Performs either a white or black top-hat transform on an input image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      },
      {
        "flag": "--variant",
        "description": "Optional variant value. Options include \u2018white\u2019 and \u2018black\u2019"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=TophatTransform -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "write function memory insertion",
    "category": "Image Processing Tools",
    "description": "Performs a write function memory insertion for single-band multi-date change detection..",
    "parameter": [
      {
        "flag": "--i1",
        "flag_long": "--input1",
        "description": "Input raster file associated with the first date"
      },
      {
        "flag": "--i2",
        "flag_long": "--input2",
        "description": "Input raster file associated with the second date"
      },
      {
        "flag": "--i3",
        "flag_long": "--input3",
        "description": "Optional input raster file associated with the third date"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=WriteFunctionMemoryInsertion -v ^\n--wd=\"/path/to/data/\" -i1=input1.tif -i2=input2.tif ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "adaptive filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs an adaptive filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      },
      {
        "flag": "--threshold",
        "description": "Difference from mean threshold, in standard deviations"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=AdaptiveFilter -v --wd=\"/path/to/data/\" ^\n-i=DEM.tif -o=output.tif --filter=25 --threshold = 2.0 \n\n"
    ]
  },
  {
    "title": "bilateral filter",
    "category": "Image Processing Tools Filters",
    "description": "A bilateral filter is an edge-preserving smoothing filter introduced by Tomasi and Manduchi (1998)..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--sigma_dist",
        "description": "Standard deviation in distance in pixels"
      },
      {
        "flag": "--sigma_int",
        "description": "Standard deviation in intensity in pixels"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=BilateralFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif ^\n--sigma_dist=2.5 --sigma_int=4.0 \n\n"
    ]
  },
  {
    "title": "conservative smoothing filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a conservative-smoothing filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ConservativeSmoothingFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "corner detection",
    "category": "Image Processing Tools Filters",
    "description": "Identifies corner patterns in boolean images using hit-and-miss pattern mattching..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input boolean image"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CornerDetection -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --sigma=2.0 \n\n"
    ]
  },
  {
    "title": "diff of gaussian filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a Difference of Gaussian (DoG) filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--sigma1",
        "description": "Standard deviation distance in pixels"
      },
      {
        "flag": "--sigma2",
        "description": "Standard deviation distance in pixels"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DiffOfGaussianFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --sigma1=2.0 ^\n--sigma2=4.0 \n\n"
    ]
  },
  {
    "title": "diversity filter",
    "category": "Image Processing Tools Filters",
    "description": "Assigns each cell in the output grid the number of different values in a moving window centred on each grid cell in the input raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DiversityFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "edge preserving mean filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a simple edge-preserving mean filter on an input image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filter",
        "description": "Size of the filter kernel"
      },
      {
        "flag": "--threshold",
        "description": "Maximum difference in values"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=EdgePreservingMeanFilter -v ^\n--wd=\"/path/to/data/\" --input=image.tif -o=output.tif ^\n--filter=5 --threshold=20 \n\n"
    ]
  },
  {
    "title": "emboss filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs an emboss filter on an image, similar to a hillshade operation..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--direction",
        "description": "Direction of reflection; options include \u2018n\u2019, \u2018s\u2019, \u2018e\u2019, \u2018w\u2019, \u2018ne\u2019, \u2018se\u2019, \u2018nw\u2019,"
      },
      {
        "flag": "--clip",
        "description": "Optional amount to clip the distribution tails by, in percent"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=EmbossFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --direction='s' --clip=1.0 \n\n"
    ]
  },
  {
    "title": "fast almost gaussian filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a fast approximate Gaussian filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--sigma",
        "description": "Standard deviation distance in pixels"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FastAlmostGaussianFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --sigma=2.0 \n\n"
    ]
  },
  {
    "title": "gaussian filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a Gaussian filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--sigma",
        "description": "Standard deviation distance in pixels"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=GaussianFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --sigma=2.0 \n\n"
    ]
  },
  {
    "title": "high pass filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a high-pass filter on an input image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=HighPassFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "high pass median filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a high pass median filter on an input image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      },
      {
        "flag": "--sig_digits",
        "description": "Number of significant digits"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=HighPassMedianFilter -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "k nearest mean filter",
    "category": "Image Processing Tools Filters",
    "description": "A k-nearest mean filter is a type of edge-preserving smoothing filter..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      },
      {
        "flag": "-k",
        "description": "k-value in pixels; this is the number of nearest-valued neighbours to use"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=KNearestMeanFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --filter=9 ^\n-k=5\n>>./whitebox_tools -r=KNearestMeanFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --filtery=7 ^\n--filtery=9 -k=5 \n\n"
    ]
  },
  {
    "title": "laplacian filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a Laplacian filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--variant",
        "description": "Optional variant value. Options include 3x3(1), 3x3(2), 3x3(3), 3x3(4), 5x5(1),"
      },
      {
        "flag": "--clip",
        "description": "Optional amount to clip the distribution tails by, in percent"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LaplacianFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif ^\n--variant='3x3(1)' --clip=1.0 \n\n"
    ]
  },
  {
    "title": "laplacian of gaussian filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a Laplacian-of-Gaussian (LoG) filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--sigma",
        "description": "Standard deviation in pixels"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LaplacianOfGaussianFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --sigma=2.0 \n\n"
    ]
  },
  {
    "title": "lee filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a Lee (Sigma) smoothing filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      },
      {
        "flag": "--sigma",
        "description": "Sigma value should be related to the standarad deviation of the distribution of"
      },
      {
        "flag": "-m",
        "description": "M-threshold value the minimum allowable number of pixels within the intensity"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LeeFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filter=9 --sigma=10.0 ^\n-m=5\n>>./whitebox_tools -r=LeeFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filtery=7 --filtery=9 ^\n--sigma=10.0 -m=5 \n\n"
    ]
  },
  {
    "title": "line detection filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a line-detection filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--variant",
        "description": "Optional variant value. Options include \u2018v\u2019 (vertical), \u2018h\u2019 (horizontal), \u201845\u2019,"
      },
      {
        "flag": "--absvals",
        "description": "Optional flag indicating whether outputs should be absolute values"
      },
      {
        "flag": "--clip",
        "description": "Optional amount to clip the distribution tails by, in percent"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LineDetectionFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --variant=h ^\n--clip=1.0 \n\n"
    ]
  },
  {
    "title": "majority filter",
    "category": "Image Processing Tools Filters",
    "description": "Assigns each cell in the output grid the most frequently occurring value (mode) in a moving window centred on each grid cell in the input raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MajorityFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "maximum filter",
    "category": "Image Processing Tools Filters",
    "description": "Assigns each cell in the output grid the maximum value in a moving window centred on each grid cell in the input raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MaximumFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "mean filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a mean filter (low-pass filter) on an input image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MeanFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filterx=25 --filtery=25 \n\n"
    ]
  },
  {
    "title": "median filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a median filter on an input image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      },
      {
        "flag": "--sig_digits",
        "description": "Number of significant digits"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MedianFilter -v --wd=\"/path/to/data/\" ^\n-i=input.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "minimum filter",
    "category": "Image Processing Tools Filters",
    "description": "Assigns each cell in the output grid the minimum value in a moving window centred on each grid cell in the input raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MinimumFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "olympic filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs an olympic smoothing filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=OlympicFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "percentile filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a percentile filter on an input image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      },
      {
        "flag": "--sig_digits",
        "description": "Number of significant digits"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PercentileFilter -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "prewitt filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a Prewitt edge-detection filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--clip",
        "description": "Optional amount to clip the distribution tails by, in percent"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PrewittFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --clip=1.0 \n\n"
    ]
  },
  {
    "title": "range filter",
    "category": "Image Processing Tools Filters",
    "description": "Assigns each cell in the output grid the range of values in a moving window centred on each grid cell in the input raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RangeFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "roberts cross filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a Robert\u2019s cross edge-detection filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--clip",
        "description": "Optional amount to clip the distribution tails by, in percent"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RobertsCrossFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --clip=1.0 \n\n"
    ]
  },
  {
    "title": "scharr filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a Scharr edge-detection filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--clip",
        "description": "Optional amount to clip the distribution tails by, in percent"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ScharrFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --clip=1.0 \n\n"
    ]
  },
  {
    "title": "sobel filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a Sobel edge-detection filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--variant",
        "description": "Optional variant value. Options include 3x3 and 5x5 (default is 3x3)"
      },
      {
        "flag": "--clip",
        "description": "Optional amount to clip the distribution tails by, in percent (default is 0.0)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=SobelFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --variant=5x5 --clip=1.0 \n\n"
    ]
  },
  {
    "title": "standard deviation filter",
    "category": "Image Processing Tools Filters",
    "description": "Assigns each cell in the output grid the standard deviation of values in a moving window centred on each grid cell in the input raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=StandardDeviationFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "total filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a total filter on an input image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--filterx",
        "description": "Size of the filter kernel in the x-direction"
      },
      {
        "flag": "--filtery",
        "description": "Size of the filter kernel in the y-direction"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=TotalFilter -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --filter=25 \n\n"
    ]
  },
  {
    "title": "unsharp masking",
    "category": "Image Processing Tools Filters",
    "description": "An image sharpening technique that enhances edges..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--sigma",
        "description": "Standard deviation distance in pixels"
      },
      {
        "flag": "--amount",
        "description": "A percentage and controls the magnitude of each overshoot"
      },
      {
        "flag": "--threshold",
        "description": "Controls the minimal brightness change that will be sharpened"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=UnsharpMasking -v --wd=\"/path/to/data/\" ^\n-i=image.tif -o=output.tif --sigma=2.0 --amount=50.0 ^\n--threshold=10.0 \n\n"
    ]
  },
  {
    "title": "user defined weights filter",
    "category": "Image Processing Tools Filters",
    "description": "Performs a user-defined weights filter on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "--weights",
        "description": "Input weights file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--center",
        "description": "Kernel center cell; options include \u2018center\u2019, \u2018upper-left\u2019, \u2018upper-right\u2019,"
      },
      {
        "flag": "--normalize",
        "description": "Normalize kernel weights? This can reduce edge effects and lessen the impact of"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=UserDefinedWeightsFilter -v ^\n--wd=\"/path/to/data/\" -i=image.tif --weights=weights.txt ^\n-o=output.tif --center=center --normalize \n\n"
    ]
  },
  {
    "title": "balance contrast enhancement",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Performs a balance contrast enhancement on a colour-composite image of multispectral data..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input colour composite image file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--band_mean",
        "description": "Band mean value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=BalanceContrastEnhancement -v ^\n--wd=\"/path/to/data/\" --input=image.tif -o=output.tif ^\n--band_mean=120 \n\n"
    ]
  },
  {
    "title": "correct vignetting",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Corrects the darkening of images towards corners..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "--pp",
        "description": "Input principal point file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--focal_length",
        "description": "Camera focal length, in millimeters"
      },
      {
        "flag": "--image_width",
        "description": "Distance between photograph edges, in millimeters"
      },
      {
        "flag": "-n",
        "description": "The \u2018n\u2019 parameter"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CorrectVignetting -v ^\n--wd=\"/path/to/data/\" -i=input.tif --pp=princ_pt.shp ^\n-o=output.tif --focal_length=304.8 --image_width=228.6 ^\n-n=4.0 \n\n"
    ]
  },
  {
    "title": "direct decorrelation stretch",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Performs a direct decorrelation stretch enhancement on a colour-composite image of multispectral data..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input colour composite image file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "-k",
        "description": "Achromatic factor (k) ranges between 0 (no effect) and 1 (full saturation"
      },
      {
        "flag": "--clip",
        "description": "Optional percent to clip the upper tail by during the stretch"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DirectDecorrelationStretch -v ^\n--wd=\"/path/to/data/\" --input=image.tif -o=output.tif -k=0.4 \n\n"
    ]
  },
  {
    "title": "gamma correction",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Performs a sigmoidal contrast stretch on input images..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--gamma",
        "description": "Gamma value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=GammaCorrection -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif --gamma=0.5 \n\n"
    ]
  },
  {
    "title": "gaussian contrast stretch",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Performs a Gaussian contrast stretch on input images..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--num_tones",
        "description": "Number of tones in the output image"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=GaussianContrastStretch -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif ^\n--num_tones=1024 \n\n"
    ]
  },
  {
    "title": "histogram equalization",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Performs a histogram equalization contrast enhancment on an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--num_tones",
        "description": "Number of tones in the output image"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=HistogramEqualization -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif ^\n--num_tones=1024 \n\n"
    ]
  },
  {
    "title": "histogram matching",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Alters the statistical distribution of a raster image matching it to a specified PDF..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "--histo_file",
        "description": "Input reference probability distribution function (pdf) text file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=HistogramMatching -v ^\n--wd=\"/path/to/data/\" -i=input1.tif --histo_file=histo.txt ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "histogram matching two images",
    "category": "Image Processing Tools Image Enhancement",
    "description": "This tool alters the cumulative distribution function of a raster image to that of another image..",
    "parameter": [
      {
        "flag": "--i1",
        "flag_long": "--input1",
        "description": "Input raster file to modify"
      },
      {
        "flag": "--i2",
        "flag_long": "--input2",
        "description": "Input reference raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=HistogramMatchingTwoImages -v ^\n--wd=\"/path/to/data/\" --i1=input1.tif --i2=input2.tif ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "min max contrast stretch",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Performs a min-max contrast stretch on an input greytone image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--min_val",
        "description": "Lower tail clip value"
      },
      {
        "flag": "--max_val",
        "description": "Upper tail clip value"
      },
      {
        "flag": "--num_tones",
        "description": "Number of tones in the output image"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=MinMaxContrastStretch -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif ^\n--min_val=45.0 --max_val=200.0 --num_tones=1024 \n\n"
    ]
  },
  {
    "title": "panchromatic sharpening",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Increases the spatial resolution of image data by combining multispectral bands with panchromatic data..",
    "parameter": [
      {
        "flag": "--red",
        "description": "Input red band image file. Optionally specified if colour-composite not"
      },
      {
        "flag": "--green",
        "description": "Input green band image file. Optionally specified if colour-composite not"
      },
      {
        "flag": "--blue",
        "description": "Input blue band image file. Optionally specified if colour-composite not"
      },
      {
        "flag": "--composite",
        "description": "Input colour-composite image file. Only used if individual bands are not"
      },
      {
        "flag": "--pan",
        "description": "Input panchromatic band file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output colour composite file"
      },
      {
        "flag": "--method",
        "description": "Options include \u2018brovey\u2019 (default) and \u2018ihs\u2019"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PanchromaticSharpening -v ^\n--wd=\"/path/to/data/\" --red=red.tif --green=green.tif ^\n--blue=blue.tif --pan=pan.tif --output=pan_sharp.tif ^\n--method='brovey'\n>>./whitebox_tools -r=PanchromaticSharpening ^\n-v --wd=\"/path/to/data/\" --composite=image.tif --pan=pan.tif ^\n--output=pan_sharp.tif --method='ihs' \n\n"
    ]
  },
  {
    "title": "percentage contrast stretch",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Performs a percentage linear contrast stretch on input images..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--clip",
        "description": "Optional amount to clip the distribution tails by, in percent"
      },
      {
        "flag": "--tail",
        "description": "Specified which tails to clip; options include \u2018upper\u2019, \u2018lower\u2019, and \u2018both\u2019"
      },
      {
        "flag": "--num_tones",
        "description": "Number of tones in the output image"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PercentageContrastStretch -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif --clip=2.0 ^\n--tail='both' --num_tones=1024 \n\n"
    ]
  },
  {
    "title": "sigmoidal contrast stretch",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Performs a sigmoidal contrast stretch on input images..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--cutoff",
        "description": "Cutoff value between 0.0 and 0.95"
      },
      {
        "flag": "--gain",
        "description": "Gain value"
      },
      {
        "flag": "--num_tones",
        "description": "Number of tones in the output image"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=SigmoidalContrastStretch -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif --cutoff=0.1 ^\n--gain=2.0 --num_tones=1024 \n\n"
    ]
  },
  {
    "title": "standard deviation contrast stretch",
    "category": "Image Processing Tools Image Enhancement",
    "description": "Performs a standard-deviation contrast stretch on input images..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--clip",
        "flag_long": "--stdev",
        "description": "Standard deviation clip value"
      },
      {
        "flag": "--num_tones",
        "description": "Number of tones in the output image"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=StandardDeviationContrastStretch -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif --stdev=2.0 ^\n--num_tones=1024 \n\n"
    ]
  },
  {
    "title": "block maximum",
    "category": "LiDAR Tools",
    "description": "Creates a block-maximum raster from an input LAS file. When the input/output parameters are not specified, the tool grids all LAS files contained within the working directory..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output file"
      },
      {
        "flag": "--resolution",
        "description": "Output raster\u2019s grid resolution"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=BlockMaximum -v --wd=\"/path/to/data/\" ^\n-i=file.las -o=outfile.tif --resolution=2.0\"\n./whitebox_tools ^\n-r=BlockMaximum -v --wd=\"/path/to/data/\" -i=file.las ^\n-o=outfile.tif --resolution=5.0 --palette=light_quant.plt \n\n"
    ]
  },
  {
    "title": "block minimum",
    "category": "LiDAR Tools",
    "description": "Creates a block-minimum raster from an input LAS file. When the input/output parameters are not specified, the tool grids all LAS files contained within the working directory..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output file"
      },
      {
        "flag": "--resolution",
        "description": "Output raster\u2019s grid resolution"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=BlockMinimum -v --wd=\"/path/to/data/\" ^\n-i=file.las -o=outfile.tif --resolution=2.0\"\n./whitebox_tools ^\n-r=BlockMinimum -v --wd=\"/path/to/data/\" -i=file.las ^\n-o=outfile.tif --resolution=5.0 --palette=light_quant.plt \n\n"
    ]
  },
  {
    "title": "classify overlap points",
    "category": "LiDAR Tools",
    "description": "Classifies or filters LAS points in regions of overlapping flight lines..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      },
      {
        "flag": "--resolution",
        "description": "The size of the square area used to evaluate nearby points in the LiDAR data"
      },
      {
        "flag": "--filter",
        "description": "Filter out points from overlapping flightlines? If false, overlaps will simply"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ClassifyOverlapPoints -v ^\n--wd=\"/path/to/data/\" -i=file.las -o=outfile.las ^\n--resolution=2.0 \n\n"
    ]
  },
  {
    "title": "clip lidar to polygon",
    "category": "LiDAR Tools",
    "description": "Clips a LiDAR point cloud to a vector polygon or polygons..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "--polygons",
        "description": "Input vector polygons file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ClipLidarToPolygon -v ^\n--wd=\"/path/to/data/\" -i='data.las' --polygons='lakes.shp' ^\n-o='output.las' \n\n"
    ]
  },
  {
    "title": "erase polygon from lidar",
    "category": "LiDAR Tools",
    "description": "Erases (cuts out) a vector polygon or polygons from a LiDAR point cloud..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "--polygons",
        "description": "Input vector polygons file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ErasePolygonFromLidar -v ^\n--wd=\"/path/to/data/\" -i='data.las' --polygons='lakes.shp' ^\n-o='output.las' \n\n"
    ]
  },
  {
    "title": "filter lidar scan angles",
    "category": "LiDAR Tools",
    "description": "Removes points in a LAS file with scan angles greater than a threshold..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      },
      {
        "flag": "--threshold",
        "description": "Scan angle threshold"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FilterLidarScanAngles -v ^\n--wd=\"/path/to/data/\" -i=\"input.las\" -o=\"output.las\" ^\n--threshold=10.0 \n\n"
    ]
  },
  {
    "title": "find flightline edge points",
    "category": "LiDAR Tools",
    "description": "Identifies points along a flightline\u2019s edge in a LAS file..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FindFlightlineEdgePoints -v ^\n--wd=\"/path/to/data/\" -i=\"input.las\" -o=\"output.las\" \n\n"
    ]
  },
  {
    "title": "flightline overlap",
    "category": "LiDAR Tools",
    "description": "Reads a LiDAR (LAS) point file and outputs a raster containing the number of overlapping flight lines in each grid cell..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output file"
      },
      {
        "flag": "--resolution",
        "description": "Output raster\u2019s grid resolution"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FlightlineOverlap -v ^\n--wd=\"/path/to/data/\" -i=file.las -o=outfile.tif ^\n--resolution=2.0\"\n./whitebox_tools -r=FlightlineOverlap -v ^\n--wd=\"/path/to/data/\" -i=file.las -o=outfile.tif ^\n--resolution=5.0 --palette=light_quant.plt \n\n"
    ]
  },
  {
    "title": "las to ascii",
    "category": "LiDAR Tools",
    "description": "Converts one or more LAS files into ASCII text files..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input LiDAR files"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LasToAscii -v --wd=\"/path/to/data/\" ^\n-i=\"file1.las, file2.las, file3.las\" -o=outfile.las\" \n\n"
    ]
  },
  {
    "title": "las to multipoint shapefile",
    "category": "LiDAR Tools",
    "description": "Converts one or more LAS files into MultipointZ vector Shapefiles. When the input parameter is not specified, the tool grids all LAS files contained within the working directory..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LasToMultipointShapefile -v ^\n--wd=\"/path/to/data/\" -i=input.las \n\n"
    ]
  },
  {
    "title": "lidar colourize",
    "category": "LiDAR Tools",
    "description": "Adds the red-green-blue colour fields of a LiDAR (LAS) file based on an input image..",
    "parameter": [
      {
        "flag": "--in_lidar",
        "description": "Input LiDAR file"
      },
      {
        "flag": "--in_image",
        "description": "Input colour image file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarColourize -v --wd=\"/path/to/data/\" ^\n--in_lidar=\"input.las\" --in_image=\"image.tif\" ^\n-o=\"output.las\" \n\n"
    ]
  },
  {
    "title": "lidar elevation slice",
    "category": "LiDAR Tools",
    "description": "Outputs all of the points within a LiDAR (LAS) point file that lie between a specified elevation range..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      },
      {
        "flag": "--minz",
        "description": "Minimum elevation value (optional)"
      },
      {
        "flag": "--maxz",
        "description": "Maximum elevation value (optional)"
      },
      {
        "flag": "--class",
        "description": "Optional boolean flag indicating whether points outside the range should be"
      },
      {
        "flag": "--inclassval",
        "description": "Optional parameter specifying the class value assigned to points within the"
      },
      {
        "flag": "--outclassval",
        "description": "Optional parameter specifying the class value assigned to points within the"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarElevationSlice -v ^\n--wd=\"/path/to/data/\" -i=\"input.las\" -o=\"output.las\" ^\n--minz=100.0 --maxz=250.0\n>>./whitebox_tools ^\n-r=LidarElevationSlice -v -i=\"/path/to/data/input.las\" ^\n-o=\"/path/to/data/output.las\" --minz=100.0 --maxz=250.0 ^\n--class\n>>./whitebox_tools -r=LidarElevationSlice -v ^\n-i=\"/path/to/data/input.las\" -o=\"/path/to/data/output.las\" ^\n--minz=100.0 --maxz=250.0 --inclassval=1 --outclassval=0 \n\n"
    ]
  },
  {
    "title": "lidar ground point filter",
    "category": "LiDAR Tools",
    "description": "Identifies ground points within LiDAR dataset using a slope-based method..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      },
      {
        "flag": "--radius",
        "description": "Search Radius"
      },
      {
        "flag": "--slope_threshold",
        "description": "Maximum inter-point slope to be considered an off-terrain point"
      },
      {
        "flag": "--height_threshold",
        "description": "Inter-point height difference to be considered an off-terrain point"
      },
      {
        "flag": "--classify",
        "description": "Classify points as ground (2) or off-ground (1)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarGroundPointFilter -v ^\n--wd=\"/path/to/data/\" -i=\"input.las\" -o=\"output.las\" ^\n--radius=10.0 \n\n"
    ]
  },
  {
    "title": "lidar hex binning",
    "category": "LiDAR Tools",
    "description": "Hex-bins a set of LiDAR points..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input base file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector polygon file"
      },
      {
        "flag": "--width",
        "description": "The grid cell width"
      },
      {
        "flag": "--orientation",
        "description": "Grid Orientation, \u2018horizontal\u2019 or \u2018vertical\u2019"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarHexBinning -v ^\n--wd=\"/path/to/data/\" -i=file.las -o=outfile.shp --width=10.0 ^\n--orientation=vertical \n\n"
    ]
  },
  {
    "title": "lidar hillshade",
    "category": "LiDAR Tools",
    "description": "Calculates a hillshade value for points within a LAS file and stores these data in the RGB field..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output file"
      },
      {
        "flag": "--azimuth",
        "description": "Illumination source azimuth in degrees"
      },
      {
        "flag": "--altitude",
        "description": "Illumination source altitude in degrees"
      },
      {
        "flag": "--radius",
        "description": "Search Radius"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarHillshade -v --wd=\"/path/to/data/\" ^\n-i=\"input.las\" -o=\"output.las\" --radius=10.0\n>>./whitebox_tools ^\n-r=LidarHillshade -v --wd=\"/path/to/data/\" -i=\"input.las\" ^\n-o=\"output.las\" --azimuth=180.0 --altitude=20.0 --radius=1.0 \n\n"
    ]
  },
  {
    "title": "lidar histogram",
    "category": "LiDAR Tools",
    "description": "Creates a histogram from LiDAR data..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file (default name will be based on input file if unspecified)"
      },
      {
        "flag": "--parameter",
        "description": "Parameter; options are \u2018elevation\u2019 (default), \u2018intensity\u2019, \u2018scan angle\u2019, \u2019class"
      },
      {
        "flag": "--clip",
        "description": "Amount to clip distribution tails (in percent)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarHistogram -v --wd=\"/path/to/data/\" ^\n-i=\"file1.tif, file2.tif, file3.tif\" -o=outfile.htm ^\n--contiguity=Bishopsl \n\n"
    ]
  },
  {
    "title": "lidar idw interpolation",
    "category": "LiDAR Tools",
    "description": "Interpolates LAS files using an inverse-distance weighted (IDW) scheme. When the input/output parameters are not specified, the tool interpolates all LAS files contained within the working directory..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file (including extension)"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file (including extension)"
      },
      {
        "flag": "--parameter",
        "description": "Interpolation parameter; options are \u2018elevation\u2019 (default), \u2018intensity\u2019,"
      },
      {
        "flag": "--returns",
        "description": "Point return types to include; options are \u2018all\u2019 (default), \u2018last\u2019, \u2018first\u2019"
      },
      {
        "flag": "--resolution",
        "description": "Output raster\u2019s grid resolution"
      },
      {
        "flag": "--weight",
        "description": "IDW weight value"
      },
      {
        "flag": "--radius",
        "description": "Search Radius"
      },
      {
        "flag": "--exclude_cls",
        "description": "Optional exclude classes from interpolation; Valid class values range from 0 to"
      },
      {
        "flag": "--minz",
        "description": "Optional minimum elevation for inclusion in interpolation"
      },
      {
        "flag": "--maxz",
        "description": "Optional maximum elevation for inclusion in interpolation"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarIdwInterpolation -v ^\n--wd=\"/path/to/data/\" -i=file.las -o=outfile.tif ^\n--resolution=2.0 --radius=5.0\"\n./whitebox_tools ^\n-r=LidarIdwInterpolation --wd=\"/path/to/data/\" -i=file.las ^\n-o=outfile.tif --resolution=5.0 --weight=2.0 --radius=2.0 ^\n--exclude_cls='3,4,5,6,7,18' --palette=light_quant.plt \n\n"
    ]
  },
  {
    "title": "lidar info",
    "category": "LiDAR Tools",
    "description": "Prints information about a LiDAR (LAS) dataset, including header, point return frequency, and classification data and information about the variable length records (VLRs) and geokeys..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file for summary report"
      },
      {
        "flag": "--vlr",
        "description": "Flag indicating whether or not to print the variable length records (VLRs)"
      },
      {
        "flag": "--geokeys",
        "description": "Flag indicating whether or not to print the geokeys"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarInfo -v --wd=\"/path/to/data/\" ^\n-i=file.las --vlr --geokeys\"\n./whitebox_tools -r=LidarInfo ^\n--wd=\"/path/to/data/\" -i=file.las \n\n"
    ]
  },
  {
    "title": "lidar join",
    "category": "LiDAR Tools",
    "description": "Joins multiple LiDAR (LAS) files into a single LAS file..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input LiDAR files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarJoin -v --wd=\"/path/to/data/\" ^\n-i=\"file1.las, file2.las, file3.las\" -o=outfile.las\" \n\n"
    ]
  },
  {
    "title": "lidar kappa index",
    "category": "LiDAR Tools",
    "description": "Performs a kappa index of agreement (KIA) analysis on the classifications of two LAS files..",
    "parameter": [
      {
        "flag": "--i1",
        "flag_long": "--input1",
        "description": "Input LiDAR classification file"
      },
      {
        "flag": "--i2",
        "flag_long": "--input2",
        "description": "Input LiDAR reference file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarKappaIndex -v ^\n--wd=\"/path/to/data/\" --i1=class.tif --i2=reference.tif ^\n-o=kia.html \n\n"
    ]
  },
  {
    "title": "lidar nearest neighbour gridding",
    "category": "LiDAR Tools",
    "description": "Grids LAS files using nearest-neighbour scheme. When the input/output parameters are not specified, the tool grids all LAS files contained within the working directory..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file (including extension)"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file (including extension)"
      },
      {
        "flag": "--parameter",
        "description": "Interpolation parameter; options are \u2018elevation\u2019 (default), \u2018intensity\u2019,"
      },
      {
        "flag": "--returns",
        "description": "Point return types to include; options are \u2018all\u2019 (default), \u2018last\u2019, \u2018first\u2019"
      },
      {
        "flag": "--resolution",
        "description": "Output raster\u2019s grid resolution"
      },
      {
        "flag": "--radius",
        "description": "Search Radius"
      },
      {
        "flag": "--exclude_cls",
        "description": "Optional exclude classes from interpolation; Valid class values range from 0 to"
      },
      {
        "flag": "--minz",
        "description": "Optional minimum elevation for inclusion in interpolation"
      },
      {
        "flag": "--maxz",
        "description": "Optional maximum elevation for inclusion in interpolation"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarNearestNeighbourGridding -v ^\n--wd=\"/path/to/data/\" -i=file.las -o=outfile.tif ^\n--resolution=2.0 --radius=5.0\"\n./whitebox_tools ^\n-r=LidarNearestNeighbourGridding --wd=\"/path/to/data/\" ^\n-i=file.las -o=outfile.tif --resolution=5.0 --radius=2.0 ^\n--exclude_cls='3,4,5,6,7,18' --palette=light_quant.plt \n\n"
    ]
  },
  {
    "title": "lidar point density",
    "category": "LiDAR Tools",
    "description": "Calculates the spatial pattern of point density for a LiDAR data set. When the input/output parameters are not specified, the tool grids all LAS files contained within the working directory..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file (including extension)"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file (including extension)"
      },
      {
        "flag": "--returns",
        "description": "Point return types to include; options are \u2018all\u2019 (default), \u2018last\u2019, \u2018first\u2019"
      },
      {
        "flag": "--resolution",
        "description": "Output raster\u2019s grid resolution"
      },
      {
        "flag": "--radius",
        "description": "Search Radius"
      },
      {
        "flag": "--exclude_cls",
        "description": "Optional exclude classes from interpolation; Valid class values range from 0 to"
      },
      {
        "flag": "--minz",
        "description": "Optional minimum elevation for inclusion in interpolation"
      },
      {
        "flag": "--maxz",
        "description": "Optional maximum elevation for inclusion in interpolation"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarPointDensity -v ^\n--wd=\"/path/to/data/\" -i=file.las -o=outfile.tif ^\n--resolution=2.0 --radius=5.0\"\n./whitebox_tools ^\n-r=LidarPointDensity -v --wd=\"/path/to/data/\" -i=file.las ^\n-o=outfile.tif --resolution=5.0 --radius=2.0 ^\n--exclude_cls='3,4,5,6,7,18' --palette=light_quant.plt \n\n"
    ]
  },
  {
    "title": "lidar point stats",
    "category": "LiDAR Tools",
    "description": "Creates several rasters summarizing the distribution of LAS point data. When the input/output parameters are not specified, the tool works on all LAS files contained within the working directory..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "--resolution",
        "description": "Output raster\u2019s grid resolution"
      },
      {
        "flag": "--num_points",
        "description": "Flag indicating whether or not to output the number of points raster"
      },
      {
        "flag": "--num_pulses",
        "description": "Flag indicating whether or not to output the number of pulses raster"
      },
      {
        "flag": "--z_range",
        "description": "Flag indicating whether or not to output the elevation range raster"
      },
      {
        "flag": "--intensity_range",
        "description": "Flag indicating whether or not to output the intensity range raster"
      },
      {
        "flag": "--predom_class",
        "description": "Flag indicating whether or not to output the predominant classification raster"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarPointStats -v ^\n--wd=\"/path/to/data/\" -i=file.las --resolution=1.0 ^\n--num_points \n\n"
    ]
  },
  {
    "title": "lidar remove duplicates",
    "category": "LiDAR Tools",
    "description": "Removes duplicate points from a LiDAR data set..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      },
      {
        "flag": "--include_z",
        "description": "Include z-values in point comparison?"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarRemoveDuplicates -v ^\n--wd=\"/path/to/data/\" -i=\"input.las\" -o=\"output.las\" \n\n"
    ]
  },
  {
    "title": "lidar remove outliers",
    "category": "LiDAR Tools",
    "description": "Removes outliers (high and low points) in a LiDAR point cloud..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      },
      {
        "flag": "--radius",
        "description": "Search Radius"
      },
      {
        "flag": "--elev_diff",
        "description": "Max. elevation difference"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarRemoveOutliers -v ^\n--wd=\"/path/to/data/\" -i=\"input.las\" -o=\"output.las\" ^\n--radius=10.0 --elev_diff=25.0 \n\n"
    ]
  },
  {
    "title": "lidar segmentation",
    "category": "LiDAR Tools",
    "description": "Segments a LiDAR point cloud based on normal vectors..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output file"
      },
      {
        "flag": "--dist",
        "flag_long": "--radius",
        "description": "Search Radius"
      },
      {
        "flag": "--norm_diff",
        "description": "Maximum difference in normal vectors, in degrees"
      },
      {
        "flag": "--maxzdiff",
        "description": "Maximum difference in elevation (z units) between neighbouring points of the"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarSegmentation -v ^\n--wd=\"/path/to/data/\" -i=\"input.las\" -o=\"output.las\" ^\n--radius=10.0 --norm_diff=2.5 --maxzdiff=0.75 \n\n"
    ]
  },
  {
    "title": "lidar segmentation based filter",
    "category": "LiDAR Tools",
    "description": "Identifies ground points within LiDAR point clouds using a segmentation based approach..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output file"
      },
      {
        "flag": "--dist",
        "flag_long": "--radius",
        "description": "Search Radius"
      },
      {
        "flag": "--norm_diff",
        "description": "Maximum difference in normal vectors, in degrees"
      },
      {
        "flag": "--maxzdiff",
        "description": "Maximum difference in elevation (z units) between neighbouring points of the"
      },
      {
        "flag": "--classify",
        "description": "Classify points as ground (2) or off-ground (1)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarSegmentationBasedFilter -v ^\n--wd=\"/path/to/data/\" -i=\"input.las\" -o=\"output.las\" ^\n--radius=10.0 --norm_diff=2.5 --maxzdiff=0.75 --classify \n\n"
    ]
  },
  {
    "title": "lidar thin",
    "category": "LiDAR Tools",
    "description": "Thins a LiDAR point cloud, reducing point density..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      },
      {
        "flag": "--resolution",
        "description": "The size of the square area used to evaluate nearby points in the LiDAR data"
      },
      {
        "flag": "--method",
        "description": "Point selection method; options are \u2018first\u2019, \u2018last\u2019, \u2018lowest\u2019 (default),"
      },
      {
        "flag": "--save_filtered",
        "description": "Save filtered points to seperate file?"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarThin -v --wd=\"/path/to/data/\" ^\n-i=file.las -o=outfile.las --resolution=2.0, --method=first ^\n--save_filtered \n\n"
    ]
  },
  {
    "title": "lidar thin high density",
    "category": "LiDAR Tools",
    "description": "Thins points from high density areas within a LiDAR point cloud..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      },
      {
        "flag": "--resolution",
        "description": "Output raster\u2019s grid resolution"
      },
      {
        "flag": "--density",
        "description": "Max. point density (points / m^3)"
      },
      {
        "flag": "--save_filtered",
        "description": "Save filtered points to seperate file?"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarThinHighDensity -v ^\n--wd=\"/path/to/data/\" -i=\"input.las\" -o=\"output.las\" ^\n--resolution=1.0 --density=100.0 --save_filtered \n\n"
    ]
  },
  {
    "title": "lidar tile",
    "category": "LiDAR Tools",
    "description": "Tiles a LiDAR LAS file into multiple LAS files..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "--width_x",
        "description": "Width of tiles in the X dimension; default 1000.0"
      },
      {
        "flag": "--width_y",
        "description": "Width of tiles in the Y dimension"
      },
      {
        "flag": "--origin_x",
        "description": "Origin point X coordinate for tile grid"
      },
      {
        "flag": "--origin_y",
        "description": "Origin point Y coordinate for tile grid"
      },
      {
        "flag": "--min_points",
        "description": "Minimum number of points contained in a tile for it to be saved"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarTile -v -i=/path/to/data/input.las ^\n--width_x=1000.0 --width_y=2500.0 -=min_points=100 \n\n"
    ]
  },
  {
    "title": "lidar tile footprint",
    "category": "LiDAR Tools",
    "description": "Creates a vector polygon of the convex hull of a LiDAR point cloud. When the input/output parameters are not specified, the tool works with all LAS files contained within the working directory..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output vector polygon file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarTileFootprint -v ^\n--wd=\"/path/to/data/\" -i=file.las -o=outfile.shp \n\n"
    ]
  },
  {
    "title": "lidar tophat transform",
    "category": "LiDAR Tools",
    "description": "Performs a white top-hat transform on a Lidar dataset; as an estimate of height above ground, this is useful for modelling the vegetation canopy..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      },
      {
        "flag": "--radius",
        "description": "Search Radius"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LidarTophatTransform -v ^\n--wd=\"/path/to/data/\" -i=\"input.las\" -o=\"output.las\" ^\n--radius=10.0 \n\n"
    ]
  },
  {
    "title": "normal vectors",
    "category": "LiDAR Tools",
    "description": "Calculates normal vectors for points within a LAS file and stores these data (XYZ vector components) in the RGB field..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input LiDAR file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output LiDAR file"
      },
      {
        "flag": "--radius",
        "description": "Search Radius"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=NormalVectors -v --wd=\"/path/to/data/\" ^\n-i=\"input.las\" -o=\"output.las\" --radius=10.0 \n\n"
    ]
  },
  {
    "title": "select tiles by polygon",
    "category": "LiDAR Tools",
    "description": "Copies LiDAR tiles overlapping with a polygon into an output directory..",
    "parameter": [
      {
        "flag": "--indir",
        "description": "Input LAS file source directory"
      },
      {
        "flag": "--outdir",
        "description": "Output directory into which LAS files within the polygon are copied"
      },
      {
        "flag": "--polygons",
        "description": "Input vector polygons file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=SelectTilesByPolygon -v ^\n--indir='/path/to/lidar/' --outdir='/output/path/' ^\n--polygons='watershed.shp' \n\n"
    ]
  },
  {
    "title": "absolute value",
    "category": "Math and Stats Tools",
    "description": "Calculates the absolute value of every cell in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=AbsoluteValue -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "add",
    "category": "Math and Stats Tools",
    "description": "Performs an addition operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Add -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "and",
    "category": "Math and Stats Tools",
    "description": "Performs a logical AND operator on two Boolean raster images..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file"
      },
      {
        "flag": "--input2",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=And -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "anova",
    "category": "Math and Stats Tools",
    "description": "Performs an analysis of variance (ANOVA) test on a raster dataset..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "--features",
        "description": "Feature definition (or class) raster"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Anova -v --wd=\"/path/to/data/\" ^\n-i=data.tif --features=classes.tif -o=anova.html \n\n"
    ]
  },
  {
    "title": "arc cos",
    "category": "Math and Stats Tools",
    "description": "Returns the inverse cosine (arccos) of each values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ArcCos -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "arc sin",
    "category": "Math and Stats Tools",
    "description": "Returns the inverse sine (arcsin) of each values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ArcSin -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "arc tan",
    "category": "Math and Stats Tools",
    "description": "Returns the inverse tangent (arctan) of each values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ArcTan -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "atan",
    "category": "Math and Stats Tools",
    "description": "Returns the 2-argument inverse tangent (atan2)..",
    "parameter": [
      {
        "flag": "--input_y",
        "description": "Input y raster file or constant value (rise)"
      },
      {
        "flag": "--input_x",
        "description": "Input x raster file or constant value (run)"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Atan2 -v --wd=\"/path/to/data/\" ^\n--input_y='in1.tif' --input_x='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "attribute correlation",
    "category": "Math and Stats Tools",
    "description": "Performs a correlation analysis on attribute fields from a vector database..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file (default name will be based on input file if unspecified)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=AttributeCorrelation -v ^\n--wd=\"/path/to/data/\" -i=file.shp -o=outfile.html \n\n"
    ]
  },
  {
    "title": "attribute histogram",
    "category": "Math and Stats Tools",
    "description": "Creates a histogram for the field values of a vector\u2019s attribute table..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "--field",
        "description": "Input field name in attribute table"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file (default name will be based on input file if unspecified)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=AttributeHistogram -v ^\n--wd=\"/path/to/data/\" -i=lakes.shp --field=HEIGHT ^\n-o=outfile.html \n\n"
    ]
  },
  {
    "title": "attribute scattergram",
    "category": "Math and Stats Tools",
    "description": "Creates a scattergram for two field values of a vector\u2019s attribute table..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "--fieldx",
        "description": "Input field name in attribute table for the x-axis"
      },
      {
        "flag": "--fieldy",
        "description": "Input field name in attribute table for the y-axis"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file (default name will be based on input file if unspecified)"
      },
      {
        "flag": "--trendline",
        "description": "Draw the trendline"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=AttributeScattergram -v ^\n--wd=\"/path/to/data/\" -i=lakes.shp --fieldx=HEIGHT ^\n--fieldy=area -o=outfile.html --trendline \n\n"
    ]
  },
  {
    "title": "ceil",
    "category": "Math and Stats Tools",
    "description": "Returns the smallest (closest to negative infinity) value that is greater than or equal to the values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Ceil -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "cos",
    "category": "Math and Stats Tools",
    "description": "Returns the cosine (cos) of each values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Cos -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "cosh",
    "category": "Math and Stats Tools",
    "description": "Returns the hyperbolic cosine (cosh) of each values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Cosh -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "crispness index",
    "category": "Math and Stats Tools",
    "description": "Calculates the Crispness Index, which is used to quantify how crisp (or conversely how fuzzy) a probability image is..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Optional output html file (default name will be based on input file if"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CrispnessIndex -v --wd=\"/path/to/data/\" ^\n-i=input.tif\n>>./whitebox_tools -r=CrispnessIndex -v ^\n--wd=\"/path/to/data/\" -o=crispness.html \n\n"
    ]
  },
  {
    "title": "cross tabulation",
    "category": "Math and Stats Tools",
    "description": "Performs a cross-tabulation on two categorical images..",
    "parameter": [
      {
        "flag": "--i1",
        "flag_long": "--input1",
        "description": "Input raster file 1"
      },
      {
        "flag": "--i2",
        "flag_long": "--input2",
        "description": "Input raster file 1"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file (default name will be based on input file if unspecified)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CrossTabulation -v ^\n--wd=\"/path/to/data/\" --i1=\"file1.tif\" --i2=\"file2.tif\" ^\n-o=outfile.html \n\n"
    ]
  },
  {
    "title": "cumulative distribution",
    "category": "Math and Stats Tools",
    "description": "Converts a raster image to its cumulative distribution function..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=CumulativeDistribution -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "decrement",
    "category": "Math and Stats Tools",
    "description": "Decreases the values of each grid cell in an input raster by 1.0 (see also InPlaceSubtract)..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Decrement -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "divide",
    "category": "Math and Stats Tools",
    "description": "Performs a division operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Divide -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "equal to",
    "category": "Math and Stats Tools",
    "description": "Performs a equal-to comparison operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=EqualTo -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "exp",
    "category": "Math and Stats Tools",
    "description": "Returns the exponential (base e) of values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Exp -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "exp",
    "category": "Math and Stats Tools",
    "description": "Returns the exponential (base 2) of values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Exp2 -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "extract raster statistics",
    "category": "Math and Stats Tools",
    "description": "Extracts descriptive statistics for a group of patches in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input data raster file"
      },
      {
        "flag": "--features",
        "description": "Input feature definition raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--stat",
        "description": "Statistic to extract"
      },
      {
        "flag": "--out_table",
        "description": "Output HTML Table file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ExtractRasterStatistics -v ^\n--wd=\"/path/to/data/\" -i='input.tif' --features='groups.tif' ^\n-o='output.tif' --stat='minimum'\n>>./whitebox_tools ^\n-r=ExtractRasterStatistics -v --wd=\"/path/to/data/\" ^\n-i='input.tif' --features='groups.tif' ^\n--out_table='output.html' \n\n"
    ]
  },
  {
    "title": "floor",
    "category": "Math and Stats Tools",
    "description": "Returns the largest (closest to positive infinity) value that is less than or equal to the values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Floor -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o='output.tif' \n\n"
    ]
  },
  {
    "title": "greater than",
    "category": "Math and Stats Tools",
    "description": "Performs a greater-than comparison operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--incl_equals",
        "description": "Perform a greater-than-or-equal-to operation"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=GreaterThan -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif ^\n--incl_equals \n\n"
    ]
  },
  {
    "title": "image autocorrelation",
    "category": "Math and Stats Tools",
    "description": "Performs Moran\u2019s I analysis on two or more input images..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "--contiguity",
        "description": "Contiguity type"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file (default name will be based on input file if unspecified)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ImageAutocorrelation -v ^\n--wd=\"/path/to/data/\" -i=\"file1.tif, file2.tif, file3.tif\" ^\n-o=outfile.html --contiguity=Bishops \n\n"
    ]
  },
  {
    "title": "image correlation",
    "category": "Math and Stats Tools",
    "description": "Performs image correlation on two or more input images..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file (default name will be based on input file if unspecified)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ImageCorrelation -v ^\n--wd=\"/path/to/data/\" -i=\"file1.tif, file2.tif, file3.tif\" ^\n-o=outfile.html \n\n"
    ]
  },
  {
    "title": "image regression",
    "category": "Math and Stats Tools",
    "description": "Performs image regression analysis on two input images..",
    "parameter": [
      {
        "flag": "--i1",
        "flag_long": "--input1",
        "description": "Input raster file (independent variable, X)"
      },
      {
        "flag": "--i2",
        "flag_long": "--input2",
        "description": "Input raster file (dependent variable, Y)"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file for regression summary report"
      },
      {
        "flag": "--out_residuals",
        "description": "Output raster regression resdidual file"
      },
      {
        "flag": "--standardize",
        "description": "Optional flag indicating whether to standardize the residuals map"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ImageRegression -v ^\n--wd=\"/path/to/data/\" --i1='file1.tif' --i2='file2.tif' ^\n-o='outfile.html' --out_residuals='residuals.tif' ^\n--standardize \n\n"
    ]
  },
  {
    "title": "in place add",
    "category": "Math and Stats Tools",
    "description": "Performs an in-place addition operation (input1 += input2)..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=InPlaceAdd -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif'\"\n>>./whitebox_tools ^\n-r=InPlaceAdd -v --wd=\"/path/to/data/\" --input1='in1.tif' ^\n--input2=10.5' \n\n"
    ]
  },
  {
    "title": "in place divide",
    "category": "Math and Stats Tools",
    "description": "Performs an in-place division operation (input1 /= input2)..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=InPlaceDivide -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif'\"\n>>./whitebox_tools ^\n-r=InPlaceDivide -v --wd=\"/path/to/data/\" --input1='in1.tif' ^\n--input2=10.5' \n\n"
    ]
  },
  {
    "title": "in place multiply",
    "category": "Math and Stats Tools",
    "description": "Performs an in-place multiplication operation (input1 *= input2)..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=InPlaceMultiply -v ^\n--wd=\"/path/to/data/\" --input1='in1.tif' ^\n--input2='in2.tif'\"\n>>./whitebox_tools -r=InPlaceMultiply -v ^\n--wd=\"/path/to/data/\" --input1='in1.tif' --input2=10.5' \n\n"
    ]
  },
  {
    "title": "in place subtract",
    "category": "Math and Stats Tools",
    "description": "Performs an in-place subtraction operation (input1 -= input2)..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=InPlaceSubtract -v ^\n--wd=\"/path/to/data/\" --input1='in1.tif' ^\n--input2='in2.tif'\"\n>>./whitebox_tools -r=InPlaceSubtract -v ^\n--wd=\"/path/to/data/\" --input1='in1.tif' --input2=10.5' \n\n"
    ]
  },
  {
    "title": "increment",
    "category": "Math and Stats Tools",
    "description": "Increases the values of each grid cell in an input raster by 1.0. (see also InPlaceAdd).",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Increment -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "integer division",
    "category": "Math and Stats Tools",
    "description": "Performs an integer division operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=IntegerDivision -v ^\n--wd=\"/path/to/data/\" --input1='in1.tif' --input2='in2.tif' ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "is no data",
    "category": "Math and Stats Tools",
    "description": "Identifies NoData valued pixels in an image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=IsNoData -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "kappa index",
    "category": "Math and Stats Tools",
    "description": "Performs a kappa index of agreement (KIA) analysis on two categorical raster files..",
    "parameter": [
      {
        "flag": "--i1",
        "flag_long": "--input1",
        "description": "Input classification raster file"
      },
      {
        "flag": "--i2",
        "flag_long": "--input2",
        "description": "Input reference raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=KappaIndex -v --wd=\"/path/to/data/\" ^\n--i1=class.tif --i2=reference.tif -o=kia.html \n\n"
    ]
  },
  {
    "title": "ks test for normality",
    "category": "Math and Stats Tools",
    "description": "Evaluates whether the values in a raster are normally distributed..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file"
      },
      {
        "flag": "--num_samples",
        "description": "Number of samples. Leave blank to use whole image"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=KSTestForNormality -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.html ^\n--num_samples=1000\n>>./whitebox_tools -r=KSTestForNormality -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.html \n\n"
    ]
  },
  {
    "title": "less than",
    "category": "Math and Stats Tools",
    "description": "Performs a less-than comparison operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--incl_equals",
        "description": "Perform a less-than-or-equal-to operation"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LessThan -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif ^\n--incl_equals \n\n"
    ]
  },
  {
    "title": "list unique values",
    "category": "Math and Stats Tools",
    "description": "Lists the unique values contained in a field witin a vector\u2019s attribute table..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "--field",
        "description": "Input field name in attribute table"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file (default name will be based on input file if unspecified)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ListUniqueValues -v ^\n--wd=\"/path/to/data/\" -i=lakes.shp --field=HEIGHT ^\n-o=outfile.html \n\n"
    ]
  },
  {
    "title": "ln",
    "category": "Math and Stats Tools",
    "description": "Returns the natural logarithm of values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Ln -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "log",
    "category": "Math and Stats Tools",
    "description": "Returns the base-10 logarithm of values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Log10 -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "log",
    "category": "Math and Stats Tools",
    "description": "Returns the base-2 logarithm of values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Log2 -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "max",
    "category": "Math and Stats Tools",
    "description": "Performs a MAX operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Max -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "min",
    "category": "Math and Stats Tools",
    "description": "Performs a MIN operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Min -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "modulo",
    "category": "Math and Stats Tools",
    "description": "Performs a modulo operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Modulo -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "multiply",
    "category": "Math and Stats Tools",
    "description": "Performs a multiplication operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Multiply -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "negate",
    "category": "Math and Stats Tools",
    "description": "Changes the sign of values in a raster or the 0-1 values of a Boolean raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Negate -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "not",
    "category": "Math and Stats Tools",
    "description": "Performs a logical NOT operator on two Boolean raster images..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file"
      },
      {
        "flag": "--input2",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Not -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "not equal to",
    "category": "Math and Stats Tools",
    "description": "Performs a not-equal-to comparison operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=NotEqualTo -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "or",
    "category": "Math and Stats Tools",
    "description": "Performs a logical OR operator on two Boolean raster images..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file"
      },
      {
        "flag": "--input2",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Or -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "power",
    "category": "Math and Stats Tools",
    "description": "Raises the values in grid cells of one rasters, or a constant value, by values in another raster or constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Power -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "principal component analysis",
    "category": "Math and Stats Tools",
    "description": "Performs a principal component analysis (PCA) on a multi-spectral dataset..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--inputs",
        "description": "Input raster files"
      },
      {
        "flag": "--out_html",
        "description": "Output HTML report file"
      },
      {
        "flag": "--num_comp",
        "description": "Number of component images to output; <= to num. input images"
      },
      {
        "flag": "--standardized",
        "description": "Perform standardized PCA?"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=PrincipalComponentAnalysis -v ^\n--wd='/path/to/data/' -i='image1.tif;image2.tif;image3.tif' ^\n--out_html=report.html --num_comp=3 --standardized \n\n"
    ]
  },
  {
    "title": "quantiles",
    "category": "Math and Stats Tools",
    "description": "Transforms raster values into quantiles..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--num_quantiles",
        "description": "Number of quantiles"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Quantiles -v --wd=\"/path/to/data/\" ^\n-i=DEM.tif -o=output.tif --num_quantiles=5 \n\n"
    ]
  },
  {
    "title": "random field",
    "category": "Math and Stats Tools",
    "description": "Creates an image containing random values..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--base",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RandomField -v --wd=\"/path/to/data/\" ^\n--base=in.tif -o=out.tif \n\n"
    ]
  },
  {
    "title": "random sample",
    "category": "Math and Stats Tools",
    "description": "Creates an image containing randomly located sample grid cells with unique IDs..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--base",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--num_samples",
        "description": "Number of samples"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RandomSample -v --wd=\"/path/to/data/\" ^\n--base=in.tif -o=out.tif --num_samples=1000 \n\n"
    ]
  },
  {
    "title": "raster histogram",
    "category": "Math and Stats Tools",
    "description": "Creates a histogram from raster values..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file (default name will be based on input file if unspecified)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RasterHistogram -v ^\n--wd=\"/path/to/data/\" -i=\"file1.tif\" -o=outfile.html \n\n"
    ]
  },
  {
    "title": "raster summary stats",
    "category": "Math and Stats Tools",
    "description": "Measures a rasters average, standard deviation, num. non-nodata cells, and total..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RasterSummaryStats -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif \n\n"
    ]
  },
  {
    "title": "reciprocal",
    "category": "Math and Stats Tools",
    "description": "Returns the reciprocal (i.e.\u00a01 / z) of values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Reciprocal -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "rescale value range",
    "category": "Math and Stats Tools",
    "description": "Performs a min-max contrast stretch on an input greytone image..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--out_min_val",
        "description": "New minimum value in output image"
      },
      {
        "flag": "--out_max_val",
        "description": "New maximum value in output image"
      },
      {
        "flag": "--clip_min",
        "description": "Optional lower tail clip value"
      },
      {
        "flag": "--clip_max",
        "description": "Optional upper tail clip value"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RescaleValueRange -v ^\n--wd=\"/path/to/data/\" -i=input.tif -o=output.tif ^\n--out_min_val=0.0 --out_max_val=1.0\n>>./whitebox_tools ^\n-r=RescaleValueRange -v --wd=\"/path/to/data/\" -i=input.tif ^\n-o=output.tif --out_min_val=0.0 --out_max_val=1.0 ^\n--clip_min=45.0 --clip_max=200.0 \n\n"
    ]
  },
  {
    "title": "root mean square error",
    "category": "Math and Stats Tools",
    "description": "Calculates the RMSE and other accuracy statistics..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "--base",
        "description": "Input base raster file used for comparison"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RootMeanSquareError -v ^\n--wd=\"/path/to/data/\" -i=DEM.tif \n\n"
    ]
  },
  {
    "title": "round",
    "category": "Math and Stats Tools",
    "description": "Rounds the values in an input raster to the nearest integer value..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Round -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "sin",
    "category": "Math and Stats Tools",
    "description": "Returns the sine (sin) of each values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Sin -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "sinh",
    "category": "Math and Stats Tools",
    "description": "Returns the hyperbolic sine (sinh) of each values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Sinh -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "square",
    "category": "Math and Stats Tools",
    "description": "Squares the values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Square -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "square root",
    "category": "Math and Stats Tools",
    "description": "Returns the square root of the values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=SquareRoot -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "subtract",
    "category": "Math and Stats Tools",
    "description": "Performs a differencing operation on two rasters or a raster and a constant value..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "--input2",
        "description": "Input raster file or constant value"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Subtract -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "tan",
    "category": "Math and Stats Tools",
    "description": "Returns the tangent (tan) of each values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Tan -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "tanh",
    "category": "Math and Stats Tools",
    "description": "Returns the hyperbolic tangent (tanh) of each values in a raster..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Tanh -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "to degrees",
    "category": "Math and Stats Tools",
    "description": "Converts a raster from radians to degrees..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ToDegrees -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "to radians",
    "category": "Math and Stats Tools",
    "description": "Converts a raster from degrees to radians..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ToRadians -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "trend surface",
    "category": "Math and Stats Tools",
    "description": "Estimates the trend surface of an input raster file..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--order",
        "description": "Polynomial order (1 to 10)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=TrendSurface -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o='output.tif' --order=2 \n\n"
    ]
  },
  {
    "title": "trend surface vector points",
    "category": "Math and Stats Tools",
    "description": "Estimates a trend surface from vector points..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input vector Points file"
      },
      {
        "flag": "--field",
        "description": "Input field name in attribute table"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--order",
        "description": "Polynomial order (1 to 10)"
      },
      {
        "flag": "--cell_size",
        "description": "Optionally specified cell size of output raster. Not used when base raster is"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=TrendSurfaceVectorPoints -v ^\n--wd=\"/path/to/data/\" -i='input.shp' --field=ELEV ^\n-o='output.tif' --order=2 --cell_size=10.0 \n\n"
    ]
  },
  {
    "title": "truncate",
    "category": "Math and Stats Tools",
    "description": "Truncates the values in a raster to the desired number of decimal places..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--num_decimals",
        "description": "Number of decimals left after truncation (default is zero)"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Truncate -v --wd=\"/path/to/data/\" ^\n-i='input.tif' -o=output.tif --num_decimals=2 \n\n"
    ]
  },
  {
    "title": "turning bands simulation",
    "category": "Math and Stats Tools",
    "description": "Creates an image containing random values based on a turning-bands simulation..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--base",
        "description": "Input base raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output file"
      },
      {
        "flag": "--range",
        "description": "The field\u2019s range, in xy-units, related to the extent of spatial autocorrelation"
      },
      {
        "flag": "--iterations",
        "description": "The number of iterations"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=TurningBandsSimulation -v ^\n--wd=\"/path/to/data/\" --base=in.tif -o=out.tif --range=850.0 ^\n--iterations=2500 \n\n"
    ]
  },
  {
    "title": "xor",
    "category": "Math and Stats Tools",
    "description": "Performs a logical XOR operator on two Boolean raster images..",
    "parameter": [
      {
        "flag": "--input1",
        "description": "Input raster file"
      },
      {
        "flag": "--input2",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=Xor -v --wd=\"/path/to/data/\" ^\n--input1='in1.tif' --input2='in2.tif' -o=output.tif \n\n"
    ]
  },
  {
    "title": "z scores",
    "category": "Math and Stats Tools",
    "description": "Standardizes the values in an input raster by converting to z-scores..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--input",
        "description": "Input raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ZScores -v --wd=\"/path/to/data/\" ^\n-i=DEM.tif -o=output.tif \n\n"
    ]
  },
  {
    "title": "distance to outlet",
    "category": "Stream Network Analysis",
    "description": "Calculates the distance of stream grid cells to the channel network outlet cell..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=DistanceToOutlet -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=DistanceToOutlet -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "extract streams",
    "category": "Stream Network Analysis",
    "description": "Extracts stream grid cells from a flow accumulation raster..",
    "parameter": [
      {
        "flag": "--flow_accum",
        "description": "Input raster D8 flow accumulation file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--threshold",
        "description": "Threshold in flow accumulation values for channelization"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ExtractStreams -v --wd=\"/path/to/data/\" ^\n--flow_accum='d8accum.tif' -o='output.tif' --threshold=100.0 ^\n--zero_background \n\n"
    ]
  },
  {
    "title": "extract valleys",
    "category": "Stream Network Analysis",
    "description": "Identifies potential valley bottom grid cells based on local topolography alone..",
    "parameter": [
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--variant",
        "description": "Options include \u2018lq\u2019 (lower quartile), \u2018JandR\u2019 (Johnston and Rosenfeld), and"
      },
      {
        "flag": "--line_thin",
        "description": "Optional flag indicating whether post-processing line-thinning should be"
      },
      {
        "flag": "--filter",
        "description": "Optional argument (only used when variant=\u2018lq\u2019) providing the filter size, in"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ExtractValleys -v --wd=\"/path/to/data/\" ^\n--dem=pointer.tif -o=out.tif --variant='JandR' ^\n--line_thin\n>>./whitebox_tools -r=ExtractValleys -v ^\n--wd=\"/path/to/data/\" --dem=pointer.tif -o=out.tif ^\n--variant='lq' --filter=7 --line_thin \n\n"
    ]
  },
  {
    "title": "farthest channel head",
    "category": "Stream Network Analysis",
    "description": "Calculates the distance to the furthest upstream channel head for each stream cell..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FarthestChannelHead -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=FarthestChannelHead -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "find main stem",
    "category": "Stream Network Analysis",
    "description": "Finds the main stem, based on stream lengths, of each stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=FindMainStem -v --wd=\"/path/to/data/\" ^\n--d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=FindMainStem -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "hack stream order",
    "category": "Stream Network Analysis",
    "description": "Assigns the Hack stream order to each tributary in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=HackStreamOrder -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=HackStreamOrder -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "horton stream order",
    "category": "Stream Network Analysis",
    "description": "Assigns the Horton stream order to each tributary in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=HortonStreamOrder -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=HortonStreamOrder -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "length of upstream channels",
    "category": "Stream Network Analysis",
    "description": "Calculates the total length of channels upstream..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LengthOfUpstreamChannels -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=LengthOfUpstreamChannels -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "long profile",
    "category": "Stream Network Analysis",
    "description": "Plots the stream longitudinal profiles for one or more rivers..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LongProfile -v --wd=\"/path/to/data/\" ^\n--d8_pntr=D8.tif --streams=streams.tif --dem=dem.tif ^\n-o=output.html --esri_pntr \n\n"
    ]
  },
  {
    "title": "long profile from points",
    "category": "Stream Network Analysis",
    "description": "Plots the longitudinal profiles from flow-paths initiating from a set of vector points..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--points",
        "description": "Input vector points file"
      },
      {
        "flag": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output HTML file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=LongProfileFromPoints -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --points=stream_head.shp ^\n--dem=dem.tif -o=output.html --esri_pntr \n\n"
    ]
  },
  {
    "title": "rasterize streams",
    "category": "Stream Network Analysis",
    "description": "Rasterizes vector streams based on Lindsay (2016) method..",
    "parameter": [
      {
        "flag": "--streams",
        "description": "Input vector streams file"
      },
      {
        "flag": "--base",
        "description": "Input base raster file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--nodata",
        "description": "Use NoData value for background?"
      },
      {
        "flag": "--feature_id",
        "description": "Use feature number as output value?"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RasterizeStreams -v ^\n--wd=\"/path/to/data/\" --streams=streams.shp --base=raster.tif ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "remove short streams",
    "category": "Stream Network Analysis",
    "description": "Removes short first-order streams from a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--min_length",
        "description": "Minimum tributary length (in map units) used for network prunning"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=RemoveShortStreams -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif \n\n"
    ]
  },
  {
    "title": "shreve stream magnitude",
    "category": "Stream Network Analysis",
    "description": "Assigns the Shreve stream magnitude to each link in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=ShreveStreamMagnitude -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=ShreveStreamMagnitude -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "strahler stream order",
    "category": "Stream Network Analysis",
    "description": "Assigns the Strahler stream order to each link in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=StrahlerStreamOrder -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=StrahlerStreamOrder -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "stream link class",
    "category": "Stream Network Analysis",
    "description": "Identifies the exterior/interior links and nodes in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=StreamLinkClass -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=StreamLinkClass -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "stream link identifier",
    "category": "Stream Network Analysis",
    "description": "Assigns a unique identifier to each link in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=StreamLinkIdentifier -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=StreamLinkIdentifier -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "stream link length",
    "category": "Stream Network Analysis",
    "description": "Estimates the length of each link (or tributary) in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--linkid",
        "description": "Input raster streams link ID (or tributary ID) file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=StreamLinkLength -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --linkid=streamsID.tif ^\n--dem=dem.tif -o=output.tif\n>>./whitebox_tools ^\n-r=StreamLinkLength -v --wd=\"/path/to/data/\" --d8_pntr=D8.tif ^\n--linkid=streamsID.tif --dem=dem.tif -o=output.tif --esri_pntr ^\n--zero_background \n\n"
    ]
  },
  {
    "title": "stream link slope",
    "category": "Stream Network Analysis",
    "description": "Estimates the average slope of each link (or tributary) in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--linkid",
        "description": "Input raster streams link ID (or tributary ID) file"
      },
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=StreamLinkSlope -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --linkid=streamsID.tif ^\n--dem=dem.tif -o=output.tif\n>>./whitebox_tools ^\n-r=StreamLinkSlope -v --wd=\"/path/to/data/\" --d8_pntr=D8.tif ^\n--linkid=streamsID.tif --dem=dem.tif -o=output.tif --esri_pntr ^\n--zero_background \n\n"
    ]
  },
  {
    "title": "stream slope continuous",
    "category": "Stream Network Analysis",
    "description": "Estimates the slope of each grid cell in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-i",
        "flag_long": "--dem",
        "description": "Input raster DEM file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=StreamSlopeContinuous -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --linkid=streamsID.tif ^\n--dem=dem.tif -o=output.tif\n>>./whitebox_tools ^\n-r=StreamSlopeContinuous -v --wd=\"/path/to/data/\" ^\n--d8_pntr=D8.tif --streams=streamsID.tif --dem=dem.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "topological stream order",
    "category": "Stream Network Analysis",
    "description": "Assigns each link in a stream network its topological order..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=TopologicalStreamOrder -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=TopologicalStreamOrder -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  },
  {
    "title": "tributary identifier",
    "category": "Stream Network Analysis",
    "description": "Assigns a unique identifier to each tributary in a stream network..",
    "parameter": [
      {
        "flag": "--d8_pntr",
        "description": "Input raster D8 pointer file"
      },
      {
        "flag": "--streams",
        "description": "Input raster streams file"
      },
      {
        "flag": "-o",
        "flag_long": "--output",
        "description": "Output raster file"
      },
      {
        "flag": "--esri_pntr",
        "description": "D8 pointer uses the ESRI style scheme"
      },
      {
        "flag": "--zero_background",
        "description": "Flag indicating whether a background value of zero should be used"
      }
    ],
    "parameter_commandline": [
      ">>./whitebox_tools -r=TributaryIdentifier -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif\n>>./whitebox_tools -r=TributaryIdentifier -v ^\n--wd=\"/path/to/data/\" --d8_pntr=D8.tif --streams=streams.tif ^\n-o=output.tif --esri_pntr --zero_background \n\n"
    ]
  }
]